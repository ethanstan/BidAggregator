{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "BaseTransition.svelte",
    "ProsemirrorEditor.svelte",
    "Dropzone.svelte",
    "Item.svelte",
    "List.svelte",
    "MultiSelection.svelte",
    "Select.svelte",
    "Selection.svelte",
    "VirtualList.svelte",
    "_fallback.svelte",
    "Binder.svelte",
    "Page.svelte",
    "SkeletonBinder.svelte",
    "SkeletonPage.svelte",
    "bold-button.svelte",
    "italic-button.svelte",
    "underline-button.svelte",
    "MrClip.svelte",
    "SectionRibbon.svelte",
    "waitlist.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import { getConcestor } from '../helpers'\n  import { fade } from 'svelte/transition'\n  import { route } from '../'\n  export let configs = []\n  export let config = false\n\n  const defaultConfig = {\n    transition: fade,\n    inParams: {},\n    outParams: {},\n  }\n\n  $: oldRoute = $route.last || $route\n  $: [concestor, ancestor, oldAncestor] = getConcestor($route.api, oldRoute.api)\n  $: toAncestor = isAncestor(oldRoute, $route)\n  $: toDescendant = isAncestor($route, oldRoute)\n  $: toHigherIndex = ancestor && ancestor.meta.index > oldAncestor.meta.index\n  $: toLowerIndex = ancestor && ancestor.meta.index < oldAncestor.meta.index\n\n\n  $: meta = {\n    toAncestor,\n    toDescendant,\n    toHigherIndex,\n    toLowerIndex,\n    routes: [$route, oldRoute],\n    pages: [$route.api, oldRoute.api],\n    ancestors: [ancestor, oldAncestor],\n  }\n\n  $: _config = configs.find(({ condition }) => condition(meta)) || config || defaultConfig\n  $: normalizedConfig = { ...defaultConfig, ..._config }\n  $: ({ transition, inParams, outParams } = normalizedConfig)\n\n  function isAncestor(descendant, ancestor) {\n    if(descendant.parent === ancestor.parent) return false\n    const { shortPath } = descendant.parent\n    const { shortPath: shortPath2 } = ancestor.parent\n    \n    return ancestor.isIndex && shortPath !== shortPath2 && shortPath.startsWith(shortPath2)\n  }\n\n  function setAbsolute({ target }) {\n    const rect = target.getBoundingClientRect()\n    target.style.width = `${rect.width}px`\n    target.style.height = `${rect.height}px`\n    target.style.top = `${rect.top}px`\n    target.style.left = `${rect.left}px`\n    \n    // target.style.transform = 'translate(-50%, -50%)'\n    target.style.position = 'fixed'\n  }\n  function removeAbsolute({ target }) {\n    target.style.position = ''\n    target.style.width = ''\n    target.style.height = ''\n    target.style.transform = ''\n  }\n</script>\n\n<style>\n  .transition {\n    height: 100%;\n    width: 100%;\n  }</style>\n\n<div\n  class=\"transition\"\n  in:transition|local={inParams}\n  out:transition|local={outParams}\n  on:introstart={removeAbsolute}\n  on:outrostart={setAbsolute}\n  >\n  <slot />\n</div>\n\n",
    "<script>\n  import { onMount, onDestroy, createEventDispatcher } from 'svelte'\n  import { createSingleLineEditor } from './state'\n  import { EditorView } from \"prosemirror-view\"\n  import { EditorState } from \"prosemirror-state\"\n\n  const dispatch = createEventDispatcher()\n\n  /** @type string */\n  export let className = \"ui-editor\"\n\n  /** @type EditorState */\n  export let editorState = createSingleLineEditor()\n\n  /** @type string */\n  export let placeholder = ''\n\n  /** Reference to the editor view\n   *  @type EditorView|null */\n  export let view = null\n\n  /** Debounce change events (set to zero for immediate updates) */\n  export let debounceChangeEventsInterval = 50\n\n  /** Reference to the editor component\n   *  @type HTMLDivElement */\n  export let editor = null\n\n  /** Focus the content-editable div */\n  export function focus() {\n    view && view.focus()\n  }\n\n  /** Blur the content-editable div */\n  export function blur() {\n    editor && editor.blur()\n  }\n\n  /** Tracks the timeout id of the last time the change event was dispatched */\n  let dispatchLastEditTimeout\n\n  /** Tracks whether changes to editor state were not yet dispatched */\n  let isDirty = false\n\n  $: if (view && editorState && !isDirty) {\n    view.updateState(editorState) // necessary to keep the DOM in sync with the editor state on external updates\n  }\n\n  /** Tracks whether the editor is empty (i.e. has a content size of 0) */\n  let editorIsEmpty\n  $: editorIsEmpty = editorState ? editorState.doc.content.size === 0\n    || (editorState.doc.textContent === \"\" && editorState.doc.content.size < 3) : true\n\n  /** Dispatches a change event and resets whether the editor state is dirty */\n  const dispatchChangeEvent = () => {\n    if (isDirty) {\n      dispatch('change', {editorState})\n      isDirty = false\n    }\n  }\n\n  /**\n   * Captures custom events from plugins and dispatches them with a new event type (based on event.detail.type)\n   * @param event {CustomEvent}\n   */\n  const onCustomEvent = event => {\n    if (event.detail) {\n      const {type, ...detail} = event.detail\n      dispatch(type || 'custom', detail)\n    }\n  }\n\n  onMount(() => {\n    view = new EditorView({mount: editor}, {\n      state: editorState,\n      dispatchTransaction: (transaction) => {\n        editorState = view.state.apply(transaction)\n\n        const contentHasChanged = !editorState.doc.eq(view.state.doc)\n\n        if (contentHasChanged) {\n          isDirty = true\n          if (debounceChangeEventsInterval > 0) {\n            if (dispatchLastEditTimeout) clearTimeout(dispatchLastEditTimeout)\n            dispatchLastEditTimeout = setTimeout(dispatchChangeEvent, 50)\n          } else {\n            setTimeout(dispatchChangeEvent, 0)\n          }\n        }\n\n        view.updateState(editorState)\n\n        dispatch('transaction', {view, editorState, isDirty, contentHasChanged})\n      },\n    })\n  })\n\n  onDestroy(() => {\n    view.destroy()\n  })\n\n</script>\n\n<div class={className}\n     class:ProseMirror={true}\n     class:editor_empty={editorIsEmpty}\n     data-placeholder={placeholder}\n     bind:this={editor}\n     on:focus\n     on:blur\n     on:keydown\n     on:custom={onCustomEvent}\n></div>\n\n<style>\n\n  :global(body) {\n    --ui-color-placeholder: #AAAAAA;\n  }\n\n  :global(.ProseMirror) {\n    position: relative;\n  }\n\n  :global(.ProseMirror) {\n    word-wrap: break-word;\n    white-space: pre-wrap;\n    -webkit-font-variant-ligatures: none;\n    font-variant-ligatures: none;\n  }\n\n  :global(.ProseMirror) pre {\n    white-space: pre-wrap;\n  }\n\n  :global(.ProseMirror) li {\n    position: relative;\n  }\n\n  :global(.ProseMirror-focused) {\n    outline:none;\n  }\n\n  :global(.ProseMirror-hideselection *::selection) {\n    background: transparent;\n  }\n\n  :global(.ProseMirror-hideselection *::-moz-selection) {\n    background: transparent;\n  }\n\n  :global(.ProseMirror-hideselection) {\n    caret-color: transparent;\n  }\n\n  :global(.ProseMirror-selectednode) {\n    outline: 2px solid #8cf;\n  }\n\n  /* Make sure li selections wrap around markers */\n\n  :global(li.ProseMirror-selectednode) {\n    outline: none;\n  }\n\n  :global(li.ProseMirror-selectednode:after) {\n    content: \"\";\n    position: absolute;\n    left: -32px;\n    right: -2px;\n    top: -2px;\n    bottom: -2px;\n    border: 2px solid #8cf;\n    pointer-events: none;\n  }\n\n  :global(.ProseMirror .empty-node::before) {\n    position: absolute;\n    color: #aaa;\n    cursor: text;\n  }\n\n  :global(.ProseMirror .empty-node:hover::before) {\n    color: #777;\n  }\n\n  :global(.ProseMirror.editor_empty::before) {\n    position: absolute;\n    content: attr(data-placeholder);\n    pointer-events: none;\n    color: var(--ui-color-placeholder);\n  }</style>\n",
    "<script>\r\n  import { fromEvent } from \"file-selector\";\r\n  import {\r\n    allFilesAccepted,\r\n    composeEventHandlers,\r\n    fileAccepted,\r\n    fileMatchSize,\r\n    isEvtWithFiles,\r\n    isIeOrEdge,\r\n    isPropagationStopped,\r\n    onDocumentDragOver,\r\n    TOO_MANY_FILES_REJECTION\r\n  } from \"./../utils/index\";\r\n  import { onMount, onDestroy, createEventDispatcher } from \"svelte\";\r\n\r\n  //props\r\n  /**\r\n   * Set accepted file types.\r\n   * See https://github.com/okonet/attr-accept for more information.\r\n   */\r\n  export let accept; // string or string[]\r\n  export let disabled = false;\r\n  export let getFilesFromEvent = fromEvent;\r\n  export let maxSize = Infinity;\r\n  export let minSize = 0;\r\n  export let multiple = true;\r\n  export let preventDropOnDocument = true;\r\n  export let noClick = false;\r\n  export let noKeyboard = false;\r\n  export let noDrag = false;\r\n  export let noDragEventsBubbling = false;\r\n  export let containerClasses = \"\";\r\n  export let containerStyles = \"\";\r\n  export let disableDefaultStyles = false;\r\n\r\n  const dispatch = createEventDispatcher();\r\n\r\n  //state\r\n\r\n  let state = {\r\n    isFocused: false,\r\n    isFileDialogActive: false,\r\n    isDragActive: false,\r\n    isDragAccept: false,\r\n    isDragReject: false,\r\n    draggedFiles: [],\r\n    acceptedFiles: [],\r\n    fileRejections: []\r\n  };\r\n\r\n  let rootRef;\r\n  let inputRef;\r\n\r\n  function resetState() {\r\n    state.isFileDialogActive = false;\r\n    state.isDragActive = false;\r\n    state.draggedFiles = [];\r\n    state.acceptedFiles = [];\r\n    state.fileRejections = [];\r\n  }\r\n\r\n  // Fn for opening the file dialog programmatically\r\n  function openFileDialog() {\r\n    if (inputRef) {\r\n      inputRef.value = null; // TODO check if null needs to be set\r\n      state.isFileDialogActive = true;\r\n      inputRef.click();\r\n    }\r\n  }\r\n\r\n  // Cb to open the file dialog when SPACE/ENTER occurs on the dropzone\r\n  function onKeyDownCb(event) {\r\n    // Ignore keyboard events bubbling up the DOM tree\r\n    if (!rootRef || !rootRef.isEqualNode(event.target)) {\r\n      return;\r\n    }\r\n\r\n    if (event.keyCode === 32 || event.keyCode === 13) {\r\n      event.preventDefault();\r\n      openFileDialog();\r\n    }\r\n  }\r\n\r\n  // Update focus state for the dropzone\r\n  function onFocusCb() {\r\n    state.isFocused = true;\r\n  }\r\n  function onBlurCb() {\r\n    state.isFocused = false;\r\n  }\r\n\r\n  // Cb to open the file dialog when click occurs on the dropzone\r\n  function onClickCb() {\r\n    if (noClick) {\r\n      return;\r\n    }\r\n\r\n    // In IE11/Edge the file-browser dialog is blocking, therefore, use setTimeout()\r\n    // to ensure React can handle state changes\r\n    // See: https://github.com/react-dropzone/react-dropzone/issues/450\r\n    if (isIeOrEdge()) {\r\n      setTimeout(openFileDialog, 0);\r\n    } else {\r\n      openFileDialog();\r\n    }\r\n  }\r\n\r\n  function onDragEnterCb(event) {\r\n    event.preventDefault();\r\n    stopPropagation(event);\r\n\r\n    dragTargetsRef = [...dragTargetsRef, event.target];\r\n\r\n    if (isEvtWithFiles(event)) {\r\n      Promise.resolve(getFilesFromEvent(event)).then(draggedFiles => {\r\n        if (isPropagationStopped(event) && !noDragEventsBubbling) {\r\n          return;\r\n        }\r\n\r\n        state.draggedFiles = draggedFiles;\r\n        state.isDragActive = true;\r\n\r\n        dispatch(\"dragenter\", {\r\n          dragEvent: event\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  function onDragOverCb(event) {\r\n    event.preventDefault();\r\n    stopPropagation(event);\r\n\r\n    if (event.dataTransfer) {\r\n      try {\r\n        event.dataTransfer.dropEffect = \"copy\";\r\n      } catch {} /* eslint-disable-line no-empty */\r\n    }\r\n\r\n    if (isEvtWithFiles(event)) {\r\n      dispatch(\"dragover\", {\r\n        dragEvent: event\r\n      });\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  function onDragLeaveCb(event) {\r\n    event.preventDefault();\r\n    stopPropagation(event);\r\n\r\n    // Only deactivate once the dropzone and all children have been left\r\n    const targets = dragTargetsRef.filter(\r\n      target => rootRef && rootRef.contains(target)\r\n    );\r\n    // Make sure to remove a target present multiple times only once\r\n    // (Firefox may fire dragenter/dragleave multiple times on the same element)\r\n    const targetIdx = targets.indexOf(event.target);\r\n    if (targetIdx !== -1) {\r\n      targets.splice(targetIdx, 1);\r\n    }\r\n    dragTargetsRef = targets;\r\n    if (targets.length > 0) {\r\n      return;\r\n    }\r\n\r\n    state.isDragActive = false;\r\n    state.draggedFiles = [];\r\n\r\n    if (isEvtWithFiles(event)) {\r\n      dispatch(\"dragleave\", {\r\n        dragEvent: event\r\n      });\r\n    }\r\n  }\r\n\r\n  function onDropCb(event) {\r\n    event.preventDefault();\r\n    stopPropagation(event);\r\n\r\n    dragTargetsRef = [];\r\n\r\n    if (isEvtWithFiles(event)) {\r\n      Promise.resolve(getFilesFromEvent(event)).then(files => {\r\n        if (isPropagationStopped(event) && !noDragEventsBubbling) {\r\n          return;\r\n        }\r\n\r\n        const acceptedFiles = [];\r\n        const fileRejections = [];\r\n\r\n        files.forEach(file => {\r\n          const [accepted, acceptError] = fileAccepted(file, accept);\r\n          const [sizeMatch, sizeError] = fileMatchSize(file, minSize, maxSize);\r\n          if (accepted && sizeMatch) {\r\n            acceptedFiles.push(file);\r\n          } else {\r\n            const errors = [acceptError, sizeError].filter(e => e);\r\n            fileRejections.push({ file, errors });\r\n          }\r\n        });\r\n\r\n        if (!multiple && acceptedFiles.length > 1) {\r\n          // Reject everything and empty accepted files\r\n          acceptedFiles.forEach(file => {\r\n            fileRejections.push({ file, errors: [TOO_MANY_FILES_REJECTION] });\r\n          });\r\n          acceptedFiles.splice(0);\r\n        }\r\n\r\n        state.acceptedFiles = acceptedFiles;\r\n        state.fileRejections = fileRejections;\r\n\r\n        dispatch(\"drop\", {\r\n          acceptedFiles,\r\n          fileRejections,\r\n          event\r\n        });\r\n\r\n        if (fileRejections.length > 0) {\r\n          dispatch(\"droprejected\", {\r\n            fileRejections,\r\n            event\r\n          });\r\n        }\r\n\r\n        if (acceptedFiles.length > 0) {\r\n          dispatch(\"dropaccepted\", {\r\n            acceptedFiles,\r\n            event\r\n          });\r\n        }\r\n      });\r\n    }\r\n    resetState();\r\n  }\r\n\r\n  function composeHandler(fn) {\r\n    return disabled ? null : fn;\r\n  }\r\n\r\n  function composeKeyboardHandler(fn) {\r\n    return noKeyboard ? null : composeHandler(fn);\r\n  }\r\n\r\n  function composeDragHandler(fn) {\r\n    return noDrag ? null : composeHandler(fn);\r\n  }\r\n\r\n  function stopPropagation(event) {\r\n    if (noDragEventsBubbling) {\r\n      event.stopPropagation();\r\n    }\r\n  }\r\n\r\n  let dragTargetsRef = [];\r\n  function onDocumentDrop(event) {\r\n    if (rootRef && rootRef.contains(event.target)) {\r\n      // If we intercepted an event for our instance, let it propagate down to the instance's onDrop handler\r\n      return;\r\n    }\r\n    event.preventDefault();\r\n    dragTargetsRef = [];\r\n  }\r\n\r\n  // Update file dialog active state when the window is focused on\r\n  function onWindowFocus() {\r\n    // Execute the timeout only if the file dialog is opened in the browser\r\n    if (state.isFileDialogActive) {\r\n      setTimeout(() => {\r\n        if (inputRef) {\r\n          const { files } = inputRef;\r\n\r\n          if (!files.length) {\r\n            state.isFileDialogActive = false;\r\n            dispatch(\"filedialogcancel\");\r\n          }\r\n        }\r\n      }, 300);\r\n    }\r\n  }\r\n\r\n  onMount(() => {\r\n    window.addEventListener(\"focus\", onWindowFocus, false);\r\n    if (preventDropOnDocument) {\r\n      document.addEventListener(\"dragover\", onDocumentDragOver, false);\r\n      document.addEventListener(\"drop\", onDocumentDrop, false);\r\n    }\r\n  });\r\n\r\n  onDestroy(() => {\r\n    window.removeEventListener(\"focus\", onWindowFocus, false);\r\n    if (preventDropOnDocument) {\r\n      document.removeEventListener(\"dragover\", onDocumentDragOver);\r\n      document.removeEventListener(\"drop\", onDocumentDrop);\r\n    }\r\n  });\r\n\r\n  function onInputElementClick(event) {\r\n    event.stopPropagation();\r\n  }\r\n</script>\r\n\r\n<style>\r\n  .dropzone {\r\n    flex: 1;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    padding: 20px;\r\n    border-width: 2px;\r\n    border-radius: 2px;\r\n    border-color: #eeeeee;\r\n    border-style: dashed;\r\n    background-color: #fafafa;\r\n    color: #bdbdbd;\r\n    outline: none;\r\n    transition: border 0.24s ease-in-out;\r\n  }\r\n  .dropzone:focus {\r\n    border-color: #2196f3;\r\n  }</style>\r\n\r\n<div\r\n  bind:this={rootRef}\r\n  tabindex=\"0\"\r\n  class=\"{disableDefaultStyles ? '' : 'dropzone'}\r\n  {containerClasses}\"\r\n  style={containerStyles}\r\n  on:keydown={composeKeyboardHandler(onKeyDownCb)}\r\n  on:focus={composeKeyboardHandler(onFocusCb)}\r\n  on:blur={composeKeyboardHandler(onBlurCb)}\r\n  on:click={composeHandler(onClickCb)}\r\n  on:dragenter={composeDragHandler(onDragEnterCb)}\r\n  on:dragover={composeDragHandler(onDragOverCb)}\r\n  on:dragleave={composeDragHandler(onDragLeaveCb)}\r\n  on:drop={composeDragHandler(onDropCb)}>\r\n  <input\r\n    {accept}\r\n    {multiple}\r\n    type=\"file\"\r\n    autocomplete=\"off\"\r\n    tabindex=\"-1\"\r\n    on:change={onDropCb}\r\n    on:click={onInputElementClick}\r\n    bind:this={inputRef}\r\n    style=\"display: none;\" />\r\n  <slot>\r\n    <p>Drag 'n' drop some files here, or click to select files</p>\r\n  </slot>\r\n</div>\r\n",
    "<script>\n  export let isActive = false;\n  export let isFirst = false;\n  export let isHover = false;\n  export let getOptionLabel = undefined;\n  export let item = undefined;\n  export let filterText = '';\n\n  let itemClasses = '';\n\n  $: {\n    const classes = [];\n    if (isActive) { classes.push('active'); }\n    if (isFirst) { classes.push('first'); }\n    if (isHover) { classes.push('hover'); }\n    if (item.isGroupHeader) { classes.push('groupHeader'); }\n    if (item.isGroupItem) { classes.push('groupItem'); }\n    itemClasses = classes.join(' ');\n  }\n</script>\n\n<style>\n  .item {\n    cursor: default;\n    height: var(--height, 42px);\n    line-height: var(--height, 42px);\n    padding: var(--itemPadding, 0 20px);\n    color: var(--itemColor, inherit);\n    text-overflow: ellipsis;\n    overflow: hidden;\n    white-space: nowrap;\n  }\n\n  .groupHeader {\n    text-transform: var(--groupTitleTextTransform, uppercase);\n  }\n\n  .groupItem {\n    padding-left: var(--groupItemPaddingLeft, 40px);\n  }\n\n  .item:active {\n    background: var(--itemActiveBackground, #b9daff);\n  }\n\n  .item.active {\n    background: var(--itemIsActiveBG, #007aff);\n    color: var(--itemIsActiveColor, #fff);\n  }\n\n  .item.first {\n    border-radius: var(--itemFirstBorderRadius, 4px 4px 0 0);\n  }\n\n  .item.hover:not(.active) {\n    background: var(--itemHoverBG, #e7f2ff);\n  }</style>\n\n\n\n<div class=\"item {itemClasses}\">\n  {@html getOptionLabel(item, filterText)}\n</div>\n",
    "<script>\n  import { beforeUpdate, createEventDispatcher, onDestroy, onMount, tick } from 'svelte';\n\n  const dispatch = createEventDispatcher();\n\n  export let container = undefined;\n\n  import ItemComponent from './Item.svelte';\n  import VirtualList from './VirtualList.svelte';\n\n  export let Item = ItemComponent;\n  export let isVirtualList = false;\n  export let items = [];\n  export let getOptionLabel = (option, filterText) => {\n    if (option) return option.isCreator ? `Create \\\"${filterText}\\\"` : option.label;\n  };\n  export let getGroupHeaderLabel = (option) => { return option.label };\n  export let itemHeight = 40;\n  export let hoverItemIndex = 0;\n  export let selectedValue = undefined;\n  export let optionIdentifier = 'value';\n  export let hideEmptyState = false;\n  export let noOptionsMessage = 'No options';\n  export let isMulti = false;\n  export let activeItemIndex = 0;\n  export let filterText = '';\n\n  let isScrollingTimer = 0;\n  let isScrolling = false;\n  let prev_items;\n  let prev_activeItemIndex;\n  let prev_selectedValue;\n\n  onMount(() => {\n    if (items.length > 0 && !isMulti && selectedValue) {\n      const _hoverItemIndex = items.findIndex((item) => item[optionIdentifier] === selectedValue[optionIdentifier]);\n\n      if (_hoverItemIndex) {\n        hoverItemIndex = _hoverItemIndex;\n      }\n    }\n\n    scrollToActiveItem('active');\n\n\n    container.addEventListener('scroll', () => {\n      clearTimeout(isScrollingTimer);\n\n      isScrollingTimer = setTimeout(() => {\n        isScrolling = false;\n      }, 100);\n    }, false);\n  });\n\n  onDestroy(() => {\n    // clearTimeout(isScrollingTimer);\n  });\n\n  beforeUpdate(() => {\n\n    if (items !== prev_items && items.length > 0) {\n      hoverItemIndex = 0;\n    }\n\n\n    // if (prev_activeItemIndex && activeItemIndex > -1) {\n    //   hoverItemIndex = activeItemIndex;\n\n    //   scrollToActiveItem('active');\n    // }\n    // if (prev_selectedValue && selectedValue) {\n    //   scrollToActiveItem('active');\n\n    //   if (items && !isMulti) {\n    //     const hoverItemIndex = items.findIndex((item) => item[optionIdentifier] === selectedValue[optionIdentifier]);\n\n    //     if (hoverItemIndex) {\n    //       hoverItemIndex = hoverItemIndex;\n    //     }\n    //   }\n    // }\n\n    prev_items = items;\n    prev_activeItemIndex = activeItemIndex;\n    prev_selectedValue = selectedValue;\n  });\n\n  function itemClasses(hoverItemIndex, item, itemIndex, items, selectedValue, optionIdentifier, isMulti) {\n    return `${selectedValue && !isMulti && (selectedValue[optionIdentifier] === item[optionIdentifier]) ? 'active ' : ''}${hoverItemIndex === itemIndex || items.length === 1 ? 'hover' : ''}`;\n  }\n\n  function handleSelect(item) {\n    if (item.isCreator) return;\n    dispatch('itemSelected', item);\n  }\n\n  function handleHover(i) {\n    if (isScrolling) return;\n    hoverItemIndex = i;\n  }\n\n  function handleClick(args) {\n    const { item, i, event } = args;\n    event.stopPropagation();\n\n    if (selectedValue && !isMulti && selectedValue[optionIdentifier] === item[optionIdentifier]) return closeList();\n\n    if (item.isCreator) {\n      dispatch('itemCreated', filterText);\n    } else {\n      activeItemIndex = i;\n      hoverItemIndex = i;\n      handleSelect(item);\n    }\n  }\n\n  function closeList() {\n    dispatch('closeList');\n  }\n\n  async function updateHoverItem(increment) {\n    if (isVirtualList) return;\n\n    let isNonSelectableItem = true;\n\n    while (isNonSelectableItem) {\n      if (increment > 0 && hoverItemIndex === (items.length - 1)) {\n        hoverItemIndex = 0;\n      }\n      else if (increment < 0 && hoverItemIndex === 0) {\n        hoverItemIndex = items.length - 1;\n      }\n      else {\n        hoverItemIndex = hoverItemIndex + increment;\n      }\n\n      isNonSelectableItem = items[hoverItemIndex].isGroupHeader && !items[hoverItemIndex].isSelectable;\n    }\n\n    await tick();\n\n    scrollToActiveItem('hover');\n  }\n\n  function handleKeyDown(e) {\n    switch (e.key) {\n      case 'ArrowDown':\n        e.preventDefault();\n        items.length && updateHoverItem(1);\n        break;\n      case 'ArrowUp':\n        e.preventDefault();\n        items.length && updateHoverItem(-1);\n        break;\n      case 'Enter':\n        e.preventDefault();\n        if (items.length === 0) break;\n        const hoverItem = items[hoverItemIndex];\n        if (selectedValue && !isMulti && selectedValue[optionIdentifier] === hoverItem[optionIdentifier]) {\n          closeList();\n          break;\n        }\n\n        if (hoverItem.isCreator) {\n          dispatch('itemCreated', filterText);\n        } else {\n          activeItemIndex = hoverItemIndex;\n          handleSelect(items[hoverItemIndex]);\n        }\n        break;\n      case 'Tab':\n        e.preventDefault();\n        if (items.length === 0) break;\n        if (selectedValue && selectedValue[optionIdentifier] === items[hoverItemIndex][optionIdentifier]) return closeList();\n        activeItemIndex = hoverItemIndex;\n        handleSelect(items[hoverItemIndex]);\n        break;\n    }\n  }\n\n  function scrollToActiveItem(className) {\n    if (isVirtualList || !container) return;\n\n    let offsetBounding;\n    const focusedElemBounding = container.querySelector(`.listItem .${className}`);\n\n    if (focusedElemBounding) {\n      offsetBounding = container.getBoundingClientRect().bottom - focusedElemBounding.getBoundingClientRect().bottom;\n    }\n\n    container.scrollTop -= offsetBounding;\n  }\n\n  function isItemActive(item, selectedValue, optionIdentifier) {\n    return selectedValue && (selectedValue[optionIdentifier] === item[optionIdentifier]);\n  };\n\n  function isItemFirst(itemIndex) {\n    return itemIndex === 0;\n  };\n\n  function isItemHover(hoverItemIndex, item, itemIndex, items) {\n    return hoverItemIndex === itemIndex || items.length === 1;\n  }\n\n</script>\n\n<svelte:window on:keydown=\"{handleKeyDown}\" />\n\n{#if isVirtualList}\n<div class=\"listContainer virtualList\" bind:this={container}>\n\n  <VirtualList {items} {itemHeight} let:item let:i>\n  \n    <div on:mouseover=\"{() => handleHover(i)}\" on:click=\"{event => handleClick({item, i, event})}\"\n        class=\"listItem\">\n          <svelte:component \n            this=\"{Item}\"\n            {item}\n            {filterText}\n            {getOptionLabel}\n            isFirst=\"{isItemFirst(i)}\"\n            isActive=\"{isItemActive(item, selectedValue, optionIdentifier)}\"\n            isHover=\"{isItemHover(hoverItemIndex, item, i, items)}\"\n          />\n    </div>\n  \n</VirtualList>\n</div>\n{/if}\n\n{#if !isVirtualList}\n<div class=\"listContainer\" bind:this={container}>\n  {#each items as item, i}\n    {#if item.isGroupHeader && !item.isSelectable}\n      <div class=\"listGroupTitle\">{getGroupHeaderLabel(item)}</div>\n    { :else }\n    <div \n      on:mouseover=\"{() => handleHover(i)}\" \n      on:click=\"{event => handleClick({item, i, event})}\"\n      class=\"listItem\"\n    >\n      <svelte:component \n        this=\"{Item}\"\n        {item}\n        {filterText}\n        {getOptionLabel}\n        isFirst=\"{isItemFirst(i)}\"\n        isActive=\"{isItemActive(item, selectedValue, optionIdentifier)}\"\n        isHover=\"{isItemHover(hoverItemIndex, item, i, items)}\"\n      />\n    </div>\n    {/if}\n  {:else}\n    {#if !hideEmptyState}\n      <div class=\"empty\">{noOptionsMessage}</div>\n    {/if}\n  {/each}\n</div>\n{/if}\n\n<style>\n  .listContainer {\n    box-shadow: var(--listShadow, 0 2px 3px 0 rgba(44, 62, 80, 0.24));\n    border-radius: var(--listBorderRadius, 4px);\n    max-height: var(--listMaxHeight, 250px);\n    overflow-y: auto;\n    background: var(--listBackground, #fff);\n  }\n\n  .virtualList {\n    height: var(--virtualListHeight, 200px);\n  }\n\n  .listGroupTitle {\n    color: var(--groupTitleColor, #8f8f8f);\n    cursor: default;\n    font-size: var(--groupTitleFontSize, 12px);\n    font-weight: var(--groupTitleFontWeight, 600);\n    height: var(--height, 42px);\n    line-height: var(--height, 42px);\n    padding: var(--groupTitlePadding, 0 20px);\n    text-overflow: ellipsis;\n    overflow-x: hidden;\n    white-space: nowrap;\n    text-transform: var(--groupTitleTextTransform, uppercase);\n  }\n\n  .empty {\n    text-align: var(--listEmptyTextAlign, center);\n    padding: var(--listEmptyPadding, 20px 0);\n    color: var(--listEmptyColor, #78848F);\n  }</style>\n",
    "<script>\n  import { createEventDispatcher } from 'svelte';\n\n  const dispatch = createEventDispatcher();\n\n  export let selectedValue = [];\n  export let activeSelectedValue = undefined;\n  export let isDisabled = false;\n  export let getSelectionLabel = undefined;\n\n  function handleClear(i, event) {\n    event.stopPropagation();\n    dispatch('multiItemClear', {i});\n  }\n</script>\n\n{#each selectedValue as value, i}\n<div class=\"multiSelectItem {activeSelectedValue === i ? 'active' : ''} {isDisabled ? 'disabled' : ''}\">\n  <div class=\"multiSelectItem_label\">\n    {@html getSelectionLabel(value)}\n  </div>\n  {#if !isDisabled}\n  <div class=\"multiSelectItem_clear\" on:click=\"{event => handleClear(i, event)}\">\n    <svg width=\"100%\" height=\"100%\" viewBox=\"-2 -2 50 50\" focusable=\"false\" role=\"presentation\">\n      <path\n        d=\"M34.923,37.251L24,26.328L13.077,37.251L9.436,33.61l10.923-10.923L9.436,11.765l3.641-3.641L24,19.047L34.923,8.124 l3.641,3.641L27.641,22.688L38.564,33.61L34.923,37.251z\"></path>\n    </svg>\n  </div>\n  {/if}\n</div>\n{/each}\n\n\n\n<style>\n  .multiSelectItem {\n    background: var(--multiItemBG, #EBEDEF);\n    margin: var(--multiItemMargin, 5px 5px 0 0);\n    border-radius: var(--multiItemBorderRadius, 16px);\n    height: var(--multiItemHeight, 32px);\n    line-height: var(--multiItemHeight, 32px);\n    display: flex;\n    cursor: default;\n    padding: var(--multiItemPadding, 0 10px 0 15px);\n  }\n\n  .multiSelectItem_label {\n    margin: var(--multiLabelMargin, 0 5px 0 0);\n  }\n\n  .multiSelectItem:hover,\n  .multiSelectItem.active {\n    background-color: var(--multiItemActiveBG, #006FFF);\n    color: var(--multiItemActiveColor, #fff);\n  }\n\n  .multiSelectItem.disabled:hover {\n    background: var(--multiItemDisabledHoverBg, #EBEDEF);\n    color: var(--multiItemDisabledHoverColor, #C1C6CC);\n  }\n\n  .multiSelectItem_clear {\n    border-radius: var(--multiClearRadius, 50%);\n    background: var(--multiClearBG, #52616F);\n    width: var(--multiClearWidth, 16px);\n    height: var(--multiClearHeight, 16px);\n    position: relative;\n    top: var(--multiClearTop, 8px);\n    text-align: var(--multiClearTextAlign, center);\n    padding: var(--multiClearPadding, 1px);\n  }\n\n  .multiSelectItem_clear:hover,\n  .active .multiSelectItem_clear {\n    background: var(--multiClearHoverBG, #fff);\n  }\n\n  .multiSelectItem_clear:hover svg,\n  .active .multiSelectItem_clear svg {\n    fill: var(--multiClearHoverFill, #006FFF);\n  }\n\n  .multiSelectItem_clear svg {\n    fill: var(--multiClearFill, #EBEDEF);\n    vertical-align: top;\n  }</style>\n",
    "<script>\n  import {\n    beforeUpdate,\n    createEventDispatcher,\n    onDestroy,\n    onMount,\n    tick\n  } from \"svelte\";\n  import List from \"./List.svelte\";\n  import ItemComponent from \"./Item.svelte\";\n  import SelectionComponent from \"./Selection.svelte\";\n  import MultiSelectionComponent from \"./MultiSelection.svelte\";\n  import isOutOfViewport from \"./utils/isOutOfViewport\";\n  import debounce from \"./utils/debounce\";\n\n  const dispatch = createEventDispatcher();\n  export let container = undefined;\n  export let input = undefined;\n  export let Item = ItemComponent;\n  export let Selection = SelectionComponent;\n  export let MultiSelection = MultiSelectionComponent;\n  export let isMulti = false;\n  export let isDisabled = false;\n  export let isCreatable = false;\n  export let isFocused = false;\n  export let selectedValue = undefined;\n  export let filterText = \"\";\n  export let placeholder = \"Select...\";\n  export let items = [];\n  export let itemFilter = (label, filterText, option) =>\n    label.toLowerCase().includes(filterText.toLowerCase());\n  export let groupBy = undefined;\n  export let groupFilter = groups => groups;\n  export let isGroupHeaderSelectable = false;\n  export let getGroupHeaderLabel = option => {\n    return option.label;\n  };\n  export let getOptionLabel = (option, filterText) => {\n    return option.isCreator ? `Create \\\"${filterText}\\\"` : option.label;\n  };\n  export let optionIdentifier = \"value\";\n  export let loadOptions = undefined;\n  export let hasError = false;\n  export let containerStyles = \"\";\n  export let getSelectionLabel = option => {\n    if (option) return option.label;\n  };\n\n  export let createGroupHeaderItem = groupValue => {\n    return {\n      value: groupValue,\n      label: groupValue\n    };\n  };\n\n  export let createItem = filterText => {\n    return {\n      value: filterText,\n      label: filterText\n    };\n  };\n\n  export let isSearchable = true;\n  export let inputStyles = \"\";\n  export let isClearable = true;\n  export let isWaiting = false;\n  export let listPlacement = \"auto\";\n  export let listOpen = false;\n  export let list = undefined;\n  export let isVirtualList = false;\n  export let loadOptionsInterval = 300;\n  export let noOptionsMessage = \"No options\";\n  export let hideEmptyState = false;\n  export let filteredItems = [];\n  export let inputAttributes = {};\n  export let listAutoWidth = true;\n  export let itemHeight = 40;\n  export let Icon = undefined;\n  export let iconProps = {};\n  export let showChevron = false;\n  export let showIndicator = false;\n  export let containerClasses = \"\";\n  export let indicatorSvg = undefined;\n\n  let target;\n  let activeSelectedValue;\n  let _items = [];\n  let originalItemsClone;\n  let prev_selectedValue;\n  let prev_listOpen;\n  let prev_filterText;\n  let prev_isFocused;\n  let prev_filteredItems;\n\n  async function resetFilter() {\n    await tick();\n    filterText = \"\";\n  }\n\n  let getItemsHasInvoked = false;\n  const getItems = debounce(async () => {\n    getItemsHasInvoked = true;\n    isWaiting = true;\n\n    items = await loadOptions(filterText);\n\n    isWaiting = false;\n    isFocused = true;\n    listOpen = true;\n  }, loadOptionsInterval);\n\n  $: disabled = isDisabled;\n\n  $: {\n    if (typeof selectedValue === \"string\") {\n      selectedValue = {\n        [optionIdentifier]: selectedValue,\n        label: selectedValue\n      };\n    } else if (isMulti && Array.isArray(selectedValue) && selectedValue.length > 0) {\n      selectedValue = selectedValue.map(item => typeof item === \"string\" ? ({ value: item, label: item }) : item);\n    }\n  }\n\n  $: {\n    if (noOptionsMessage && list) list.$set({ noOptionsMessage });\n  }\n\n  $: showSelectedItem = selectedValue && filterText.length === 0;\n\n  $: placeholderText = selectedValue ? \"\" : placeholder;\n\n  let _inputAttributes = {};\n  $: {\n    _inputAttributes = Object.assign(inputAttributes, {\n      autocomplete: \"off\",\n      autocorrect: \"off\",\n      spellcheck: false\n    });\n\n    if (!isSearchable) {\n      _inputAttributes.readonly = true;\n    }\n  }\n\n  $: {\n    let _filteredItems;\n    let _items = items;\n\n    if (items && items.length > 0 && typeof items[0] !== \"object\") {\n      _items = items.map((item, index) => {\n        return {\n          index,\n          value: item,\n          label: item\n        };\n      });\n    }\n\n    if (loadOptions && filterText.length === 0 && originalItemsClone) {\n      _filteredItems = JSON.parse(originalItemsClone);\n      _items = JSON.parse(originalItemsClone);\n    } else {\n      _filteredItems = loadOptions\n        ? filterText.length === 0\n          ? []\n          : _items\n        : _items.filter(item => {\n            let keepItem = true;\n\n            if (isMulti && selectedValue) {\n              keepItem = !selectedValue.some(value => {\n                return value[optionIdentifier] === item[optionIdentifier];\n              });\n            }\n\n            if (!keepItem) return false;\n            if (filterText.length < 1) return true;\n            return itemFilter(\n              getOptionLabel(item, filterText),\n              filterText,\n              item\n            );\n          });\n    }\n\n    if (groupBy) {\n      const groupValues = [];\n      const groups = {};\n\n      _filteredItems.forEach(item => {\n        const groupValue = groupBy(item);\n\n        if (!groupValues.includes(groupValue)) {\n          groupValues.push(groupValue);\n          groups[groupValue] = [];\n\n          if (groupValue) {\n            groups[groupValue].push(\n              Object.assign(createGroupHeaderItem(groupValue, item), {\n                id: groupValue,\n                isGroupHeader: true,\n                isSelectable: isGroupHeaderSelectable\n              })\n            );\n          }\n        }\n\n        groups[groupValue].push(\n          Object.assign({ isGroupItem: !!groupValue }, item)\n        );\n      });\n\n      const sortedGroupedItems = [];\n\n      groupFilter(groupValues).forEach(groupValue => {\n        sortedGroupedItems.push(...groups[groupValue]);\n      });\n\n      filteredItems = sortedGroupedItems;\n    } else {\n      filteredItems = _filteredItems;\n    }\n  }\n\n  beforeUpdate(() => {\n    if (isMulti && selectedValue && selectedValue.length > 1) {\n      checkSelectedValueForDuplicates();\n    }\n\n    if (!isMulti && selectedValue && prev_selectedValue !== selectedValue) {\n      if (\n        !prev_selectedValue ||\n        JSON.stringify(selectedValue[optionIdentifier]) !==\n          JSON.stringify(prev_selectedValue[optionIdentifier])\n      ) {\n        dispatch(\"select\", selectedValue);\n      }\n    }\n\n    if (\n      isMulti &&\n      JSON.stringify(selectedValue) !== JSON.stringify(prev_selectedValue)\n    ) {\n      if (checkSelectedValueForDuplicates()) {\n        dispatch(\"select\", selectedValue);\n      }\n    }\n\n    if (container && listOpen !== prev_listOpen) {\n      if (listOpen) {\n        loadList();\n      } else {\n        removeList();\n      }\n    }\n\n    if (filterText !== prev_filterText) {\n      if (filterText.length > 0) {\n        isFocused = true;\n        listOpen = true;\n\n        if (loadOptions) {\n          getItems();\n        } else {\n          loadList();\n          listOpen = true;\n\n          if (isMulti) {\n            activeSelectedValue = undefined;\n          }\n        }\n      } else {\n        setList([]);\n      }\n\n      if (list) {\n        list.$set({\n          filterText\n        });\n      }\n    }\n\n    if (isFocused !== prev_isFocused) {\n      if (isFocused || listOpen) {\n        handleFocus();\n      } else {\n        resetFilter();\n        if (input) input.blur();\n      }\n    }\n\n    if (prev_filteredItems !== filteredItems) {\n      let _filteredItems = [...filteredItems];\n\n      if (isCreatable && filterText) {\n        const itemToCreate = createItem(filterText);\n        itemToCreate.isCreator = true;\n\n        const existingItemWithFilterValue = _filteredItems.find(item => {\n          return item[optionIdentifier] === itemToCreate[optionIdentifier];\n        });\n\n        let existingSelectionWithFilterValue;\n\n        if (selectedValue) {\n          if (isMulti) {\n            existingSelectionWithFilterValue = selectedValue.find(selection => {\n              return (\n                selection[optionIdentifier] === itemToCreate[optionIdentifier]\n              );\n            });\n          } else if (\n            selectedValue[optionIdentifier] === itemToCreate[optionIdentifier]\n          ) {\n            existingSelectionWithFilterValue = selectedValue;\n          }\n        }\n\n        if (!existingItemWithFilterValue && !existingSelectionWithFilterValue) {\n          _filteredItems = [..._filteredItems, itemToCreate];\n        }\n      }\n\n      setList(_filteredItems);\n    }\n\n    prev_selectedValue = selectedValue;\n    prev_listOpen = listOpen;\n    prev_filterText = filterText;\n    prev_isFocused = isFocused;\n    prev_filteredItems = filteredItems;\n  });\n\n  function checkSelectedValueForDuplicates() {\n    let noDuplicates = true;\n    if (selectedValue) {\n      const ids = [];\n      const uniqueValues = [];\n\n      selectedValue.forEach(val => {\n        if (!ids.includes(val[optionIdentifier])) {\n          ids.push(val[optionIdentifier]);\n          uniqueValues.push(val);\n        } else {\n          noDuplicates = false;\n        }\n      });\n\n      if (!noDuplicates)\n        selectedValue = uniqueValues;\n    }\n    return noDuplicates;\n  }\n\n  async function setList(items) {\n    await tick();\n    if (list) return list.$set({ items });\n    if (loadOptions && getItemsHasInvoked && items.length > 0) loadList();\n  }\n\n  function handleMultiItemClear(event) {\n    const { detail } = event;\n    const itemToRemove =\n      selectedValue[detail ? detail.i : selectedValue.length - 1];\n\n    if (selectedValue.length === 1) {\n      selectedValue = undefined;\n    } else {\n      selectedValue = selectedValue.filter(item => {\n        return item !== itemToRemove;\n      });\n    }\n\n    dispatch(\"clear\", itemToRemove);\n\n    getPosition();\n  }\n\n  async function getPosition() {\n    await tick();\n    if (!target || !container) return;\n    const { top, height, width } = container.getBoundingClientRect();\n\n    target.style[\"min-width\"] = `${width}px`;\n    target.style.width = `${listAutoWidth ? \"auto\" : \"100%\"}`;\n    target.style.left = \"0\";\n\n    if (listPlacement === \"top\") {\n      target.style.bottom = `${height + 5}px`;\n    } else {\n      target.style.top = `${height + 5}px`;\n    }\n\n    target = target;\n\n    if (listPlacement === \"auto\" && isOutOfViewport(target).bottom) {\n      target.style.top = ``;\n      target.style.bottom = `${height + 5}px`;\n    }\n\n    target.style.visibility = \"\";\n  }\n\n  function handleKeyDown(e) {\n    if (!isFocused) return;\n\n    switch (e.key) {\n      case \"ArrowDown\":\n        e.preventDefault();\n        listOpen = true;\n        activeSelectedValue = undefined;\n        break;\n      case \"ArrowUp\":\n        e.preventDefault();\n        listOpen = true;\n        activeSelectedValue = undefined;\n        break;\n      case \"Tab\":\n        if (!listOpen) isFocused = false;\n        break;\n      case \"Backspace\":\n        if (!isMulti || filterText.length > 0) return;\n        if (isMulti && selectedValue && selectedValue.length > 0) {\n          handleMultiItemClear(\n            activeSelectedValue !== undefined\n              ? activeSelectedValue\n              : selectedValue.length - 1\n          );\n          if (activeSelectedValue === 0 || activeSelectedValue === undefined)\n            break;\n          activeSelectedValue =\n            selectedValue.length > activeSelectedValue\n              ? activeSelectedValue - 1\n              : undefined;\n        }\n        break;\n      case \"ArrowLeft\":\n        if (list) list.$set({ hoverItemIndex: -1 });\n        if (!isMulti || filterText.length > 0) return;\n\n        if (activeSelectedValue === undefined) {\n          activeSelectedValue = selectedValue.length - 1;\n        } else if (\n          selectedValue.length > activeSelectedValue &&\n          activeSelectedValue !== 0\n        ) {\n          activeSelectedValue -= 1;\n        }\n        break;\n      case \"ArrowRight\":\n        if (list) list.$set({ hoverItemIndex: -1 });\n        if (\n          !isMulti ||\n          filterText.length > 0 ||\n          activeSelectedValue === undefined\n        )\n          return;\n        if (activeSelectedValue === selectedValue.length - 1) {\n          activeSelectedValue = undefined;\n        } else if (activeSelectedValue < selectedValue.length - 1) {\n          activeSelectedValue += 1;\n        }\n        break;\n    }\n  }\n\n  function handleFocus() {\n    isFocused = true;\n    if (input) input.focus();\n  }\n\n  function removeList() {\n    resetFilter();\n    activeSelectedValue = undefined;\n\n    if (!list) return;\n    list.$destroy();\n    list = undefined;\n\n    if (!target) return;\n    if (target.parentNode) target.parentNode.removeChild(target);\n    target = undefined;\n\n    list = list;\n    target = target;\n  }\n\n  function handleWindowClick(event) {\n    if (!container) return;\n    const eventTarget =\n      event.path && event.path.length > 0 ? event.path[0] : event.target;\n    if (container.contains(eventTarget)) return;\n    isFocused = false;\n    listOpen = false;\n    activeSelectedValue = undefined;\n    if (input) input.blur();\n  }\n\n  function handleClick() {\n    if (isDisabled) return;\n    isFocused = true;\n    listOpen = !listOpen;\n  }\n\n  export function handleClear() {\n    selectedValue = undefined;\n    listOpen = false;\n    dispatch(\"clear\", selectedValue);\n    handleFocus();\n  }\n\n  async function loadList() {\n    await tick();\n    if (target && list) return;\n\n    const data = {\n      Item,\n      filterText,\n      optionIdentifier,\n      noOptionsMessage,\n      hideEmptyState,\n      isVirtualList,\n      selectedValue,\n      isMulti,\n      getGroupHeaderLabel,\n      items: filteredItems,\n      itemHeight\n    };\n\n    if (getOptionLabel) {\n      data.getOptionLabel = getOptionLabel;\n    }\n\n    target = document.createElement(\"div\");\n\n    Object.assign(target.style, {\n      position: \"absolute\",\n      \"z-index\": 2,\n      visibility: \"hidden\"\n    });\n\n    list = list;\n    target = target;\n    if (container) container.appendChild(target);\n\n    list = new List({\n      target,\n      props: data\n    });\n\n    list.$on(\"itemSelected\", event => {\n      const { detail } = event;\n\n      if (detail) {\n        const item = Object.assign({}, detail);\n\n        if (!item.isGroupHeader || item.isSelectable) {\n\n          if (isMulti) {\n            selectedValue = selectedValue ? selectedValue.concat([item]) : [item];\n          } else {\n            selectedValue = item;\n          }\n\n          resetFilter();\n          selectedValue = selectedValue;\n\n          setTimeout(() => {\n            listOpen = false;\n            activeSelectedValue = undefined;\n          });\n        }\n      }\n    });\n\n    list.$on(\"itemCreated\", event => {\n      const { detail } = event;\n      if (isMulti) {\n        selectedValue = selectedValue || [];\n        selectedValue = [...selectedValue, createItem(detail)];\n      } else {\n        selectedValue = createItem(detail);\n      }\n\n      filterText = \"\";\n      listOpen = false;\n      activeSelectedValue = undefined;\n      resetFilter();\n    });\n\n    list.$on(\"closeList\", () => {\n      listOpen = false;\n    });\n\n    (list = list), (target = target);\n    getPosition();\n  }\n\n  onMount(() => {\n    if (isFocused) input.focus();\n    if (listOpen) loadList();\n\n    if (items && items.length > 0) {\n      originalItemsClone = JSON.stringify(items);\n    }\n  });\n\n  onDestroy(() => {\n    removeList();\n  });\n</script>\n\n<style>\n  .selectContainer {\n    --padding: 0 16px;\n\n    border: var(--border, 1px solid #d8dbdf);\n    border-radius: var(--borderRadius, 3px);\n    height: var(--height, 42px);\n    position: relative;\n    display: flex;\n    align-items: center;\n    padding: var(--padding);\n    background: var(--background, #fff);\n  }\n\n  .selectContainer input {\n    cursor: default;\n    border: none;\n    color: var(--inputColor, #3f4f5f);\n    height: var(--height, 42px);\n    line-height: var(--height, 42px);\n    padding: var(--inputPadding, var(--padding));\n    width: 100%;\n    background: transparent;\n    font-size: var(--inputFontSize, 14px);\n    letter-spacing: var(--inputLetterSpacing, -0.08px);\n    position: absolute;\n    left: var(--inputLeft, 0);\n  }\n\n  .selectContainer input::placeholder {\n    color: var(--placeholderColor, #78848f);\n  }\n\n  .selectContainer input:focus {\n    outline: none;\n  }\n\n  .selectContainer:hover {\n    border-color: var(--borderHoverColor, #b2b8bf);\n  }\n\n  .selectContainer.focused {\n    border-color: var(--borderFocusColor, #006fe8);\n  }\n\n  .selectContainer.disabled {\n    background: var(--disabledBackground, #ebedef);\n    border-color: var(--disabledBorderColor, #ebedef);\n    color: var(--disabledColor, #c1c6cc);\n  }\n\n  .selectContainer.disabled input::placeholder {\n    color: var(--disabledPlaceholderColor, #c1c6cc);\n  }\n\n  .selectedItem {\n    line-height: var(--height, 42px);\n    height: var(--height, 42px);\n    overflow-x: hidden;\n    padding: var(--selectedItemPadding, 0 20px 0 0);\n  }\n\n  .selectedItem:focus {\n    outline: none;\n  }\n\n  .clearSelect {\n    position: absolute;\n    right: var(--clearSelectRight, 10px);\n    top: var(--clearSelectTop, 11px);\n    bottom: var(--clearSelectBottom, 11px);\n    width: var(--clearSelectWidth, 20px);\n    color: var(--clearSelectColor, #c5cacf);\n    flex: none !important;\n  }\n\n  .clearSelect:hover {\n    color: var(--clearSelectHoverColor, #2c3e50);\n  }\n\n  .selectContainer.focused .clearSelect {\n    color: var(--clearSelectFocusColor, #3f4f5f);\n  }\n\n  .indicator {\n    position: absolute;\n    right: var(--indicatorRight, 10px);\n    top: var(--indicatorTop, 11px);\n    width: var(--indicatorWidth, 20px);\n    height: var(--indicatorHeight, 20px);\n    color: var(--indicatorColor, #c5cacf);\n  }\n\n  .indicator svg {\n    display: inline-block;\n    fill: var(--indicatorFill, currentcolor);\n    line-height: 1;\n    stroke: var(--indicatorStroke, currentcolor);\n    stroke-width: 0;\n  }\n\n  .spinner {\n    position: absolute;\n    right: var(--spinnerRight, 10px);\n    top: var(--spinnerLeft, 11px);\n    width: var(--spinnerWidth, 20px);\n    height: var(--spinnerHeight, 20px);\n    color: var(--spinnerColor, #51ce6c);\n    animation: rotate 0.75s linear infinite;\n  }\n\n  .spinner_icon {\n    display: block;\n    height: 100%;\n    transform-origin: center center;\n    width: 100%;\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    margin: auto;\n    -webkit-transform: none;\n  }\n\n  .spinner_path {\n    stroke-dasharray: 90;\n    stroke-linecap: round;\n  }\n\n  .multiSelect {\n    display: flex;\n    padding: var(--multiSelectPadding, 0 35px 0 16px);\n    height: auto;\n    flex-wrap: wrap;\n  }\n\n  .multiSelect > * {\n    flex: 1 1 50px;\n  }\n\n  .selectContainer.multiSelect input {\n    padding: var(--multiSelectInputPadding, 0);\n    position: relative;\n    margin: var(--multiSelectInputMargin, 0);\n  }\n\n  .hasError {\n    border: var(--errorBorder, 1px solid #ff2d55);\n  }\n\n  @keyframes rotate {\n    100% {\n      transform: rotate(360deg);\n    }\n  }</style>\n\n<svelte:window\n  on:click={handleWindowClick}\n  on:keydown={handleKeyDown}\n  on:resize={getPosition} />\n\n<div\n  class=\"selectContainer {containerClasses}\"\n  class:hasError\n  class:multiSelect={isMulti}\n  class:disabled={isDisabled}\n  class:focused={isFocused}\n  style={containerStyles}\n  on:click={handleClick}\n  bind:this={container}>\n\n  {#if Icon}\n    <svelte:component this={Icon} {...iconProps} />\n  {/if}\n\n  {#if isMulti && selectedValue && selectedValue.length > 0}\n    <svelte:component\n      this={MultiSelection}\n      {selectedValue}\n      {getSelectionLabel}\n      {activeSelectedValue}\n      {isDisabled}\n      on:multiItemClear={handleMultiItemClear}\n      on:focus={handleFocus} />\n  {/if}\n\n  {#if isDisabled}\n    <input\n      {..._inputAttributes}\n      bind:this={input}\n      on:focus={handleFocus}\n      bind:value={filterText}\n      placeholder={placeholderText}\n      style={inputStyles}\n      disabled />\n  {:else}\n    <input\n      {..._inputAttributes}\n      bind:this={input}\n      on:focus={handleFocus}\n      bind:value={filterText}\n      placeholder={placeholderText}\n      style={inputStyles} />\n  {/if}\n\n  {#if !isMulti && showSelectedItem}\n    <div class=\"selectedItem\" on:focus={handleFocus}>\n      <svelte:component\n        this={Selection}\n        item={selectedValue}\n        {getSelectionLabel} />\n    </div>\n  {/if}\n\n  {#if showSelectedItem && isClearable && !isDisabled && !isWaiting}\n    <div class=\"clearSelect\" on:click|preventDefault={handleClear}>\n      <svg\n        width=\"100%\"\n        height=\"100%\"\n        viewBox=\"-2 -2 50 50\"\n        focusable=\"false\"\n        role=\"presentation\">\n        <path\n          fill=\"currentColor\"\n          d=\"M34.923,37.251L24,26.328L13.077,37.251L9.436,33.61l10.923-10.923L9.436,11.765l3.641-3.641L24,19.047L34.923,8.124\n          l3.641,3.641L27.641,22.688L38.564,33.61L34.923,37.251z\" />\n      </svg>\n    </div>\n  {/if}\n\n  {#if showIndicator || (showChevron && !selectedValue || (!isSearchable && !isDisabled && !isWaiting && ((showSelectedItem && !isClearable) || !showSelectedItem)))}\n    <div class=\"indicator\">\n      {#if indicatorSvg}\n        {@html indicatorSvg}\n      {:else}\n        <svg\n          width=\"100%\"\n          height=\"100%\"\n          viewBox=\"0 0 20 20\"\n          focusable=\"false\">\n          <path\n            d=\"M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747\n            3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0\n            1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502\n            0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0\n            0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z\" />\n        </svg>\n      {/if}\n    </div>\n  {/if}\n\n  {#if isWaiting}\n    <div class=\"spinner\">\n      <svg class=\"spinner_icon\" viewBox=\"25 25 50 50\">\n        <circle\n          class=\"spinner_path\"\n          cx=\"50\"\n          cy=\"50\"\n          r=\"20\"\n          fill=\"none\"\n          stroke=\"currentColor\"\n          stroke-width=\"5\"\n          stroke-miterlimit=\"10\" />\n      </svg>\n    </div>\n  {/if}\n</div>\n",
    "<script>\n  export let getSelectionLabel = undefined;\n  export let item = undefined;\n</script>\n\n<style>\n  .selection {\n    text-overflow: ellipsis;\n    overflow-x: hidden;\n    white-space: nowrap;\n  }</style>\n\n<div class=\"selection\">\n  {@html getSelectionLabel(item)} \n</div>\n",
    "<script>\n\timport { onMount, tick } from 'svelte';\n\n\t// props\n\texport let items = undefined;\n\texport let height = '100%';\n\texport let itemHeight = 40;\n\texport let hoverItemIndex = 0;\n\n\t// read-only, but visible to consumers via bind:start\n\texport let start = 0;\n\texport let end = 0;\n\n\t// local state\n\tlet height_map = [];\n\tlet rows;\n\tlet viewport;\n\tlet contents;\n\tlet viewport_height = 0;\n\tlet visible;\n\tlet mounted;\n\n\tlet top = 0;\n\tlet bottom = 0;\n\tlet average_height;\n\n\t$: visible = items.slice(start, end).map((data, i) => {\n\t\treturn { index: i + start, data };\n\t});\n\n\t// whenever `items` changes, invalidate the current heightmap\n\t$: if (mounted) refresh(items, viewport_height, itemHeight);\n\n\tasync function refresh(items, viewport_height, itemHeight) {\n\t\tconst { scrollTop } = viewport;\n\n\t\tawait tick(); // wait until the DOM is up to date\n\n\t\tlet content_height = top - scrollTop;\n\t\tlet i = start;\n\n\t\twhile (content_height < viewport_height && i < items.length) {\n\t\t\tlet row = rows[i - start];\n\n\t\t\tif (!row) {\n\t\t\t\tend = i + 1;\n\t\t\t\tawait tick(); // render the newly visible row\n\t\t\t\trow = rows[i - start];\n\t\t\t}\n\n\t\t\tconst row_height = height_map[i] = itemHeight || row.offsetHeight;\n\t\t\tcontent_height += row_height;\n\t\t\ti += 1;\n\t\t}\n\n\t\tend = i;\n\n\t\tconst remaining = items.length - end;\n\t\taverage_height = (top + content_height) / end;\n\n\t\tbottom = remaining * average_height;\n\t\theight_map.length = items.length;\n\n\t\tviewport.scrollTop = 0;\n\t}\n\n\tasync function handle_scroll() {\n\t\tconst { scrollTop } = viewport;\n\n\t\tconst old_start = start;\n\n\t\tfor (let v = 0; v < rows.length; v += 1) {\n\t\t\theight_map[start + v] = itemHeight || rows[v].offsetHeight;\n\t\t}\n\n\t\tlet i = 0;\n\t\tlet y = 0;\n\n\t\twhile (i < items.length) {\n\t\t\tconst row_height = height_map[i] || average_height;\n\t\t\tif (y + row_height > scrollTop) {\n\t\t\t\tstart = i;\n\t\t\t\ttop = y;\n\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\ty += row_height;\n\t\t\ti += 1;\n\t\t}\n\n\t\twhile (i < items.length) {\n\t\t\ty += height_map[i] || average_height;\n\t\t\ti += 1;\n\n\t\t\tif (y > scrollTop + viewport_height) break;\n\t\t}\n\n\t\tend = i;\n\n\t\tconst remaining = items.length - end;\n\t\taverage_height = y / end;\n\n\t\twhile (i < items.length) height_map[i++] = average_height;\n\t\tbottom = remaining * average_height;\n\n\t\t// prevent jumping if we scrolled up into unknown territory\n\t\tif (start < old_start) {\n\t\t\tawait tick();\n\n\t\t\tlet expected_height = 0;\n\t\t\tlet actual_height = 0;\n\n\t\t\tfor (let i = start; i < old_start; i += 1) {\n\t\t\t\tif (rows[i - start]) {\n\t\t\t\t\texpected_height += height_map[i];\n\t\t\t\t\tactual_height += itemHeight || rows[i - start].offsetHeight;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst d = actual_height - expected_height;\n\t\t\tviewport.scrollTo(0, scrollTop + d);\n\t\t}\n\n\t\t// TODO if we overestimated the space these\n\t\t// rows would occupy we may need to add some\n\t\t// more. maybe we can just call handle_scroll again?\n\t}\n\n\t// trigger initial refresh\n\tonMount(() => {\n\t\trows = contents.getElementsByTagName('svelte-virtual-list-row');\n\t\tmounted = true;\n\t});\n</script>\n\n<style>\n\tsvelte-virtual-list-viewport {\n\t\tposition: relative;\n\t\toverflow-y: auto;\n\t\t-webkit-overflow-scrolling: touch;\n\t\tdisplay: block;\n\t}\n\n\tsvelte-virtual-list-contents,\n\tsvelte-virtual-list-row {\n\t\tdisplay: block;\n\t}\n\n\tsvelte-virtual-list-row {\n\t\toverflow: hidden;\n\t}</style>\n\n<svelte-virtual-list-viewport bind:this={viewport} bind:offsetHeight={viewport_height} on:scroll={handle_scroll}\n\tstyle=\"height: {height};\">\n\t<svelte-virtual-list-contents bind:this={contents} style=\"padding-top: {top}px; padding-bottom: {bottom}px;\">\n\t\t{#each visible as row (row.index)}\n\t\t\t<svelte-virtual-list-row>\n\t\t\t\t<slot item={row.data} i={row.index} {hoverItemIndex}>Missing template</slot>\n\t\t\t</svelte-virtual-list-row>\n\t\t{/each}\n\t</svelte-virtual-list-contents>\n</svelte-virtual-list-viewport>",
    "<script>\n    import { url } from '@sveltech/routify'\n</script>\n\n<style>\n  .huge {\n    font-size: 12rem;\n  }\n  .e404 {\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    transform: translate(-50%, -50%);\n    text-align: center;\n  }</style>\n\n<div class=\"e404\">\n  <div class=\"huge\">404</div>\n  <div class=\"big\">Page not found. \n  <!-- link to the parent folder of _fallback.svelte -->\n  <a href={$url('/login')} class=\"text-green-400 underline\">Go to Login</a>\n  </div>\n</div>\n",
    "<script>\n  import { goto } from \"@sveltech/routify\";\n  export let binderName = \"Undefined\";\n  export let binderDescription = \"Undefined\";\n  export let binderId = 0;\n  export let newBinder = false;\n  import { gql } from \"apollo-boost\";\n  import { createEventDispatcher } from \"svelte\";\n  const dispatch = createEventDispatcher();\n\n  let newBinderName;\n  let newBinderDescription;\n  export let insertBinder = null;\n\n  let binderState = \"link\";\n  let editBinderName = binderName;\n  let editBinderDescription = binderDescription;\n\n  const UPDATE_BINDER = `\n    mutation MyMutation($binderId: Int!, $name: String!, $description: String!) {\n      update_binders_by_pk(pk_columns: {id: $binderId}, _set: {name: $name, description: $description}) {\n        id\n      }\n    }\n  `;\n\n  const DELETE_BINDER = `\n    mutation MyMutation($binderId: Int!) {\n      delete_binders_by_pk(id: $binderId) {\n        id\n      }\n    }\n  `;\n\n  const editBinder = async () => {\n    try {\n      console.log(\"GO\");\n      const updateBinder = (\n        await window.pageql.getClient().mutate({\n          mutation: gql`\n            ${UPDATE_BINDER}\n          `,\n          variables: {\n            binderId: binderId,\n            name: editBinderName,\n            description: editBinderDescription ? editBinderDescription : \"\",\n          },\n        })\n      ).data;\n      await window.pageql.getClient().cache.reset();\n\n      binderState = \"link\";\n      binderName = editBinderName;\n      binderDescription = editBinderDescription;\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const deleteBinder = async () => {\n    try {\n      const dBinder = (\n        await window.pageql.getClient().mutate({\n          mutation: gql`\n            ${DELETE_BINDER}\n          `,\n          variables: {\n            binderId: binderId,\n          },\n        })\n      ).data;\n      await window.pageql.getClient().cache.reset();\n\n      binderState = \"link\";\n      dispatch(\"deletedBinder\", {\n        id: binderId,\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  $: buttonUnclickable = binderState != \"link\";\n</script>\n\n<style>\n  .buttonUnclickable {\n    cursor: default;\n  }\n\n  .binder {\n    background: var(--bg-color);\n    border-top-right-radius: 1.3rem;\n    border-bottom-right-radius: 1.3rem;\n    border-top-left-radius: 0.7rem;\n    border-bottom-left-radius: 0.7rem;\n    padding-left: 16%;\n    margin-right: 20px;\n    grid-area: 1 / 1 / 1 / 1;\n  }\n\n  .binder-inside {\n    grid-area: 1 / 1 / 1 / 1;\n    margin-top: 20px;\n    margin-bottom: 20px;\n  }\n\n  .binder-back {\n    border-top-right-radius: 1.3rem;\n    border-bottom-right-radius: 1.3rem;\n    border-top-left-radius: 0.7rem;\n    border-bottom-left-radius: 0.7rem;\n    margin-right: 20px;\n    grid-area: 1 / 1 / 1 / 1;\n  }\n\n  .binder-hover:hover > .binder-inside {\n    transform: translate(-0.5rem, 0);\n    -webkit-transform: translate(-0.5rem, 0);\n    -moz-transform: translate(-0.5rem, 0);\n    -o-transform: translate(-0.5rem, 0);\n    -ms-transform: translate(-0.5rem, 0);\n  }\n\n  /*.bookmark:hover {\n    transform: translate(0.5rem, 0);\n    -webkit-transform: translate(0.5rem, 0);\n    -moz-transform: translate(0.5rem, 0);\n    -o-transform: translate(0.5rem, 0);\n    -ms-transform: translate(0.5rem, 0);\n  }*/</style>\n\n{#if newBinder}\n  <div class=\"binder-hover grid\">\n    <div style=\"width: 15.2rem\" class=\"binder h-56 z-20\">\n      <div class=\"h-full ml-auto border-l-8 border-gray-300 p-4 relative\">\n        <input class=\"form-input block w-full sm:text-sm sm:leading-5\" bind:value={newBinderName} placeholder=\"Name\" />\n        <br />\n        <input class=\"form-input block w-full sm:text-sm sm:leading-5\" bind:value={newBinderDescription} placeholder=\"Description\" />\n        <br />\n        <div class=\"absolute mb-4 bottom-0\">\n          <button\n            on:click={() => {\n              newBinder = false;\n            }}\n            type=\"button\"\n            class=\"mr-1 bg-gray-300 inline-flex items-center px-4 py-2 border border-transparent text-sm leading-5 font-medium rounded-md text-white hover:bg-gray-500 focus:outline-none\n            focus:shadow-outline-gray focus:border-gray-700 active:bg-gray-700 transition duration-150 ease-in-out\">\n            Cancel\n          </button>\n          <button\n            type=\"button\"\n            on:click={() => insertBinder(newBinderName, newBinderDescription)}\n            class=\"bg-green-300 inline-flex items-center px-4 py-2 border border-transparent text-sm leading-5 font-medium rounded-md text-white hover:bg-green-400 focus:outline-none\n            focus:shadow-outline-green focus:border-green-600 active:bg-green-600 transition duration-150 ease-in-out\">\n            Save\n          </button>\n        </div>\n      </div>\n    </div>\n\n    <div style=\"width: 16.2rem\" class=\"binder-inside h-56 z-10 pl-20 flex flex-col space-y-4 transition transform duration-500 ease-in-out\">\n      <div class=\"bookmark yellow-bookmark w-full h-8\" />\n      <div class=\"bookmark red-bookmark w-full h-8\" />\n      <div class=\"bookmark pink-bookmark w-full h-8\" />\n    </div>\n\n    <div style=\"width: 15.2rem\" class=\"binder-back h-56 z-00\" />\n  </div>\n{:else}\n  <div class:buttonUnclickable class=\"cursor-pointer binder-hover grid focus:outline-none text-left\" on:click={() => binderState == 'link' && $goto('/app/binders/:id', { id: binderId, name: binderName })}>\n    <div style=\"width: 15.2rem\" class=\"binder h-56 z-20\">\n      <div class=\"h-full ml-auto border-l-8 border-gray-300 p-4 relative\">\n        {#if binderState == 'menu'}\n          <p class=\"font-semibold text-lg underline whitespace-no-wrap overflow-x-hidden disable-scrollbars\">{binderName}</p>\n          <br />\n          <button class=\"cursor-pointer flex flex-row\" on:click={() => (binderState = 'edit')}>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" class=\"h-5 w-5\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M15.232 5.232l3.536 3.536m-2.036-5.036a2.5 2.5 0 113.536 3.536L6.5 21.036H3v-3.572L16.732 3.732z\" />\n            </svg>\n            <span class=\"ml-1 font-semibold text-md\">Edit Binder</span>\n          </button>\n          <br />\n          <button class=\"cursor-pointer flex flex-row\" on:click={() => (binderState = 'delete')}>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" class=\"h-5 w-5\">\n              <path\n                stroke-linecap=\"round\"\n                stroke-linejoin=\"round\"\n                stroke-width=\"2\"\n                d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\" />\n            </svg>\n            <span class=\"ml-1 font-semibold text-md\">Delete Binder</span>\n          </button>\n          <br />\n          <button on:click|stopPropagation={() => (binderState = 'link')} class=\"absolute mb-4 bottom-0 right-0 mr-4 flex flex-row\">Go Back</button>\n        {:else if binderState == 'edit'}\n          <input class=\"form-input block w-full sm:text-sm sm:leading-5\" bind:value={editBinderName} placeholder=\"Name\" />\n          <br />\n          <input class=\"form-input block w-full sm:text-sm sm:leading-5\" bind:value={editBinderDescription} placeholder=\"Description\" />\n          <br />\n          <div class=\"absolute mb-4 bottom-0\">\n            <button\n              on:click|stopPropagation={() => (binderState = 'link')}\n              type=\"button\"\n              class=\"mr-1 bg-gray-300 inline-flex items-center px-4 py-2 border border-transparent text-sm leading-5 font-medium rounded-md text-white hover:bg-gray-500 focus:outline-none\n              focus:shadow-outline-gray focus:border-gray-700 active:bg-gray-700 transition duration-150 ease-in-out\">\n              Cancel\n            </button>\n            <button\n              type=\"button\"\n              on:click={() => editBinder()}\n              class=\"bg-green-300 inline-flex items-center px-4 py-2 border border-transparent text-sm leading-5 font-medium rounded-md text-white hover:bg-green-400 focus:outline-none\n              focus:shadow-outline-green focus:border-green-600 active:bg-green-600 transition duration-150 ease-in-out\">\n              Save\n            </button>\n          </div>\n        {:else if binderState == 'delete'}\n          <span class=\"\">\n            Are you sure you want to delete\n            <span class=\"font-bold\">\n              <p class=\"whitespace-no-wrap overflow-x-hidden disable-scrollbars\">{binderName}</p>\n            </span>\n            ?\n          </span>\n          <br />\n          <div class=\"absolute mb-4 bottom-0\">\n            <button\n              on:click|stopPropagation={() => (binderState = 'link')}\n              type=\"button\"\n              class=\"mr-1 bg-gray-300 inline-flex items-center px-4 py-2 border border-transparent text-sm leading-5 font-medium rounded-md text-white hover:bg-gray-500 focus:outline-none\n              focus:shadow-outline-gray focus:border-gray-700 active:bg-gray-700 transition duration-150 ease-in-out\">\n              Cancel\n            </button>\n            <button\n              type=\"button\"\n              on:click={() => deleteBinder()}\n              class=\"bg-red-300 inline-flex items-center px-4 py-2 border border-transparent text-sm leading-5 font-medium rounded-md text-white hover:bg-red-500 focus:outline-none\n              focus:shadow-outline-red focus:border-red-700 active:bg-red-700 transition duration-150 ease-in-out\">\n              Delete\n            </button>\n          </div>\n        {:else}\n          <span class=\"font-semibold text-lg underline\">\n            <p class=\"h-6 whitespace-normal overflow-y-scroll overflow-x-hidden disable-scrollbars\">{binderName}</p>\n          </span>\n          <br />\n          <span class=\"h-24 whitespace-normal overflow-y-scroll font-hairline\">{binderDescription}</span>\n          <br />\n          <button on:click={() => (binderState = 'menu')} class=\"absolute mb-4 bottom-0 right-0 mr-4 flex flex-row focus:outline-none\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" class=\"icon-dots-vertical w-8 h-8\">\n              <path fill-rule=\"evenodd\" d=\"M12 7a2 2 0 1 1 0-4 2 2 0 0 1 0 4zm0 7a2 2 0 1 1 0-4 2 2 0 0 1 0 4zm0 7a2 2 0 1 1 0-4 2 2 0 0 1 0 4z\" />\n            </svg>\n          </button>\n        {/if}\n      </div>\n    </div>\n\n    <div style=\"width: 16.2rem\" class=\"binder-inside h-56 z-10 pl-20 flex flex-col space-y-4 transition transform duration-500 ease-in-out\">\n      <div class=\"bookmark yellow-bookmark w-full h-8\" />\n      <div class=\"bookmark green-bookmark w-full h-8\" />\n      <div class=\"bookmark blue-bookmark w-full h-8\" />\n    </div>\n\n    <div style=\"width: 15.2rem\" class=\"binder-back h-56 z-00\" />\n  </div>\n{/if}\n",
    "<script>\n  import { goto } from \"@sveltech/routify\";\n  import { gql } from \"apollo-boost\";\n  import { createEventDispatcher } from \"svelte\";\n  const dispatch = createEventDispatcher();\n\n  export let pageName;\n  export let pageType;\n  export let pageId;\n\n  export let newPage = false;\n  let newPageName;\n\n  export let insertPage = null;\n\n  let pageState = \"link\";\n  let editPageName = pageName;\n\n  const UPDATE_PAGE = `\n    mutation MyMutation($pageId: Int!, $name: String!) {\n      update_pages_by_pk(pk_columns: {id: $pageId}, _set: {name: $name}) {\n        id\n      }\n    }\n  `;\n\n  const DELETE_PAGE = `\n    mutation MyMutation($pageId: Int!) {\n      delete_pages_by_pk(id: $pageId) {\n        id\n      }\n    }\n  `;\n\n  const editPage = async () => {\n    try {\n      const updatePage = (\n        await window.pageql.getClient().mutate({\n          mutation: gql`\n            ${UPDATE_PAGE}\n          `,\n          variables: {\n            pageId: pageId,\n            name: editPageName,\n          },\n        })\n      ).data;\n      await window.pageql.getClient().cache.reset();\n\n      pageState = \"link\";\n      pageName = editPageName;\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const deletePage = async () => {\n    try {\n      const dPage = (\n        await window.pageql.getClient().mutate({\n          mutation: gql`\n            ${DELETE_PAGE}\n          `,\n          variables: {\n            pageId: pageId,\n          },\n        })\n      ).data;\n      await window.pageql.getClient().cache.reset();\n      \n      pageState = \"link\";\n      dispatch(\"deletedPage\", {\n        id: pageId,\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  $: buttonUnclickable = pageState != \"link\";\n</script>\n\n<style>\n  .buttonUnclickable {\n    cursor: default;\n  }</style>\n\n{#if newPage}\n  <div class=\"grid\">\n    <div class=\"h-64 w-64 paper relative\">\n      <div class=\"h-full ml-auto border-l-8 border-gray-300 p-4 relative\">\n        <input class=\"appearance-none form-input block w-full rounded-md focus:outline-none sm:text-sm sm:leading-5\" bind:value={newPageName} placeholder=\"Name\" />\n        <br />\n        <span class=\"inline-flex items-center px-2.5 mx-auto py-0.5 rounded-md text-sm font-medium leading-5 bg-blue-100 text-blue-800\">Document</span>\n        <br />\n        <div class=\"absolute mb-4 bottom-0\">\n          <button\n            on:click={() => (newPage = false)}\n            type=\"button\"\n            class=\"mr-1 bg-gray-300 inline-flex items-center px-4 py-2 border border-transparent text-sm leading-5 font-medium rounded-md text-white hover:bg-gray-500 focus:outline-none\n            focus:shadow-outline-gray focus:border-gray-700 active:bg-gray-700 transition duration-150 ease-in-out\">\n            Cancel\n          </button>\n          <button\n            type=\"button\"\n            on:click={() => insertPage(newPageName, 'Document')}\n            class=\"bg-green-300 inline-flex items-center px-4 py-2 border border-transparent text-sm leading-5 font-medium rounded-md text-white hover:bg-green-400 focus:outline-none\n            focus:shadow-outline-green focus:border-green-700 active:bg-green-700 transition duration-150 ease-in-out\">\n            Save\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n{:else}\n  <button class:buttonUnclickable class=\"grid focus:outline-none text-left\" on:click={() => pageState == 'link' && $goto('/app/project/:id', { id: pageId })}>\n    <div class=\"h-64 w-64 paper relative\">\n      <div class=\"h-full ml-auto border-l-8 border-gray-300 p-4 relative\">\n        {#if pageState == 'menu'}\n          <p class=\"font-semibold text-lg underline whitespace-no-wrap overflow-x-hidden disable-scrollbars\">{pageName}</p>\n          <br />\n          <button class=\"cursor-pointer flex flex-row\" on:click={() => (pageState = 'edit')}>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" class=\"h-5 w-5\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M15.232 5.232l3.536 3.536m-2.036-5.036a2.5 2.5 0 113.536 3.536L6.5 21.036H3v-3.572L16.732 3.732z\" />\n            </svg>\n            <span class=\"ml-1 font-semibold text-md\">Edit Page</span>\n          </button>\n          <br />\n          <button class=\"cursor-pointer flex flex-row\" on:click={() => (pageState = 'delete')}>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" class=\"h-5 w-5\">\n              <path\n                stroke-linecap=\"round\"\n                stroke-linejoin=\"round\"\n                stroke-width=\"2\"\n                d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\" />\n            </svg>\n            <span class=\"ml-1 font-semibold text-md\">Delete Page</span>\n          </button>\n          <br />\n          <button on:click|stopPropagation={() => (pageState = 'link')} class=\"absolute mb-4 bottom-0 right-0 mr-4 flex flex-row\">Go Back</button>\n        {:else if pageState == 'edit'}\n          <input class=\"appearance-none form-input block w-full rounded-md focus:outline-none sm:text-sm sm:leading-5\" bind:value={editPageName} placeholder=\"Name\" />\n          <br />\n          <div class=\"absolute mb-4 bottom-0\">\n            <button\n              on:click|stopPropagation={() => (pageState = 'link')}\n              type=\"button\"\n              class=\"mr-1 bg-gray-300 inline-flex items-center px-4 py-2 border border-transparent text-sm leading-5 font-medium rounded-md text-white hover:bg-gray-500 focus:outline-none\n              focus:shadow-outline-gray focus:border-gray-700 active:bg-gray-700 transition duration-150 ease-in-out\">\n              Cancel\n            </button>\n            <button\n              type=\"button\"\n              on:click={() => editPage()}\n              class=\"bg-green-300 inline-flex items-center px-4 py-2 border border-transparent text-sm leading-5 font-medium rounded-md text-white hover:bg-green-400 focus:outline-none\n              focus:shadow-outline-green focus:border-green-600 active:bg-green-600 transition duration-150 ease-in-out\">\n              Save\n            </button>\n          </div>\n        {:else if pageState == 'delete'}\n          <span class=\"\">\n            Are you sure you want to delete\n            <p class=\"font-bold whitespace-no-wrap overflow-x-hidden disable-scrollbars\">{pageName}?</p>\n          </span>\n          <br />\n          <div class=\"absolute mb-4 bottom-0\">\n            <button\n              on:click|stopPropagation={() => (pageState = 'link')}\n              type=\"button\"\n              class=\"mr-1 bg-gray-300 inline-flex items-center px-4 py-2 border border-transparent text-sm leading-5 font-medium rounded-md text-white hover:bg-gray-500 focus:outline-none\n              focus:shadow-outline-gray focus:border-gray-700 active:bg-gray-700 transition duration-150 ease-in-out\">\n              Cancel\n            </button>\n            <button\n              type=\"button\"\n              on:click={() => deletePage()}\n              class=\"bg-red-300 inline-flex items-center px-4 py-2 border border-transparent text-sm leading-5 font-medium rounded-md text-white hover:bg-red-500 focus:outline-none\n              focus:shadow-outline-red focus:border-red-700 active:bg-red-700 transition duration-150 ease-in-out\">\n              Delete\n            </button>\n          </div>\n        {:else}\n          <span class=\"font-semibold text-lg underline\">\n            <p class=\"h-40 whitespace-normal overflow-y-scroll overflow-x-hidden disable-scrollbars\">{pageName}</p>\n          </span>\n          <br />\n          <span\n            class=\"inline-flex items-center px-2.5 mx-auto py-0.5 rounded-md text-sm font-medium leading-5 {pageType === 'Document' ? 'bg-blue-100 text-blue-800' : 'bg-orange-100 text-orange-800'}\">\n            {pageType}\n          </span>\n          <button on:click={() => (pageState = 'menu')} class=\"absolute mb-4 bottom-0 right-0 mr-4 flex flex-row\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" class=\"icon-dots-vertical w-8 h-8\">\n              <path fill-rule=\"evenodd\" d=\"M12 7a2 2 0 1 1 0-4 2 2 0 0 1 0 4zm0 7a2 2 0 1 1 0-4 2 2 0 0 1 0 4zm0 7a2 2 0 1 1 0-4 2 2 0 0 1 0 4z\" />\n            </svg>\n          </button>\n          <br />\n        {/if}\n      </div>\n    </div>\n  </button>\n{/if}\n",
    "<script>\n  \n</script>\n\n<style>\n\n  .binder {\n    background: var(--bg-color);\n    border-top-right-radius: 1.3rem;\n    border-bottom-right-radius: 1.3rem;\n    border-top-left-radius: 0.7rem;\n    border-bottom-left-radius: 0.7rem;\n    padding-left: 16%;\n    margin-right: 20px;\n    grid-area: 1 / 1 / 1 / 1;\n  }\n  .binder-inside {\n    grid-area: 1 / 1 / 1 / 1;\n    margin-top: 20px;\n    margin-bottom: 20px;\n  }\n  .binder-back {\n    border-top-right-radius: 1.3rem;\n    border-bottom-right-radius: 1.3rem;\n    border-top-left-radius: 0.7rem;\n    border-bottom-left-radius: 0.7rem;\n    margin-right: 20px;\n    grid-area: 1 / 1 / 1 / 1;\n  }\n  .binder-hover:hover > .binder-inside {\n    transform: translate(-0.5rem, 0);\n    -webkit-transform: translate(-0.5rem, 0);\n    -moz-transform: translate(-0.5rem, 0);\n    -o-transform: translate(-0.5rem, 0);\n    -ms-transform: translate(-0.5rem, 0);\n  }\n  /*.bookmark:hover {\n    transform: translate(0.5rem, 0);\n    -webkit-transform: translate(0.5rem, 0);\n    -moz-transform: translate(0.5rem, 0);\n    -o-transform: translate(0.5rem, 0);\n    -ms-transform: translate(0.5rem, 0);\n  }*/</style>\n\n<div class=\"grid focus:outline-none text-left\">\n  <div style=\"width: 15.2rem\" class=\"binder h-56 z-20\">\n    <div class=\"h-full ml-auto border-l-8 border-gray-300 p-4 relative\">\n      <span class=\"font-semibold text-lg underline\">\n        <p class=\"h-6 whitespace-normal overflow-y-scroll overflow-x-hidden disable-scrollbars \"></p>\n      </span>\n      <br />\n      <span class=\"h-24 whitespace-normal overflow-y-scroll font-hairline\"></span>\n      <br />\n    </div>\n  </div>\n\n  <div style=\"width: 16.2rem\" class=\"binder-inside h-56 z-10 pl-20 flex flex-col space-y-4 transition transform duration-500 ease-in-out\">\n    <div class=\"bookmark yellow-bookmark w-full h-8\" />\n    <div class=\"bookmark green-bookmark w-full h-8\" />\n    <div class=\"bookmark blue-bookmark w-full h-8\" />\n  </div>\n\n  <div style=\"width: 15.2rem\" class=\"binder-back h-56 z-00\" />\n</div>\n",
    "<script>\n  import { goto } from \"@sveltech/routify\";\n  import { gql } from \"apollo-boost\";\n  import { createEventDispatcher } from \"svelte\";\n  const dispatch = createEventDispatcher();\n\n  export let pageName;\n  export let pageType;\n  export let pageId;\n\n  export let newPage = false;\n  let newPageName;\n\n  export let insertPage = null;\n\n  let pageState = \"link\";\n  let editPageName = pageName;\n\n  const UPDATE_PAGE = `\n    mutation MyMutation($pageId: Int!, $name: String!) {\n      update_pages_by_pk(pk_columns: {id: $pageId}, _set: {name: $name}) {\n        id\n      }\n    }\n  `;\n\n  const DELETE_PAGE = `\n    mutation MyMutation($pageId: Int!) {\n      delete_pages_by_pk(id: $pageId) {\n        id\n      }\n    }\n  `;\n\n  const editPage = async () => {\n    try {\n      const updatePage = (\n        await window.pageql.getClient().mutate({\n          mutation: gql`\n            ${UPDATE_PAGE}\n          `,\n          variables: {\n            pageId: pageId,\n            name: editPageName,\n          },\n        })\n      ).data;\n      await window.pageql.getClient().cache.reset();\n\n      pageState = \"link\";\n      pageName = editPageName;\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const deletePage = async () => {\n    try {\n      const dPage = (\n        await window.pageql.getClient().mutate({\n          mutation: gql`\n            ${DELETE_PAGE}\n          `,\n          variables: {\n            pageId: pageId,\n          },\n        })\n      ).data;\n      await window.pageql.getClient().cache.reset();\n      \n      pageState = \"link\";\n      dispatch(\"deletedPage\", {\n        id: pageId,\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  $: buttonUnclickable = pageState != \"link\";\n</script>\n\n<style>\n  .buttonUnclickable {\n    cursor: default;\n  }</style>\n\n{#if newPage}\n  <div class=\"grid\">\n    <div class=\"h-64 w-64 paper relative\">\n      <div class=\"h-full ml-auto border-l-8 border-gray-300 p-4 relative\">\n        <input class=\"appearance-none form-input block w-full rounded-md focus:outline-none sm:text-sm sm:leading-5\" bind:value={newPageName} placeholder=\"Name\" />\n        <br />\n        <span class=\"inline-flex items-center px-2.5 mx-auto py-0.5 rounded-md text-sm font-medium leading-5 bg-blue-100 text-blue-800\">Document</span>\n        <br />\n        <div class=\"absolute mb-4 bottom-0\">\n          <button\n            on:click={() => (newPage = false)}\n            type=\"button\"\n            class=\"mr-1 bg-gray-300 inline-flex items-center px-4 py-2 border border-transparent text-sm leading-5 font-medium rounded-md text-white hover:bg-gray-500 focus:outline-none\n            focus:shadow-outline-gray focus:border-gray-700 active:bg-gray-700 transition duration-150 ease-in-out\">\n            Cancel\n          </button>\n          <button\n            type=\"button\"\n            on:click={() => insertPage(newPageName, 'Document')}\n            class=\"bg-green-300 inline-flex items-center px-4 py-2 border border-transparent text-sm leading-5 font-medium rounded-md text-white hover:bg-green-400 focus:outline-none\n            focus:shadow-outline-green focus:border-green-700 active:bg-green-700 transition duration-150 ease-in-out\">\n            Save\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n{:else}\n  <button class:buttonUnclickable class=\"grid focus:outline-none text-left\" on:click={() => pageState == 'link' && $goto('/app/project/:id', { id: pageId })}>\n    <div class=\"h-64 w-64 paper relative\">\n      <div class=\"h-full ml-auto border-l-8 border-gray-300 p-4 relative\">\n        {#if pageState == 'menu'}\n          <p class=\"font-semibold text-lg underline whitespace-no-wrap overflow-x-hidden disable-scrollbars\">{pageName}</p>\n          <br />\n          <button class=\"cursor-pointer flex flex-row\" on:click={() => (pageState = 'edit')}>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" class=\"h-5 w-5\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M15.232 5.232l3.536 3.536m-2.036-5.036a2.5 2.5 0 113.536 3.536L6.5 21.036H3v-3.572L16.732 3.732z\" />\n            </svg>\n            <span class=\"ml-1 font-semibold text-md\">Edit Page</span>\n          </button>\n          <br />\n          <button class=\"cursor-pointer flex flex-row\" on:click={() => (pageState = 'delete')}>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" class=\"h-5 w-5\">\n              <path\n                stroke-linecap=\"round\"\n                stroke-linejoin=\"round\"\n                stroke-width=\"2\"\n                d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\" />\n            </svg>\n            <span class=\"ml-1 font-semibold text-md\">Delete Page</span>\n          </button>\n          <br />\n          <button on:click|stopPropagation={() => (pageState = 'link')} class=\"absolute mb-4 bottom-0 right-0 mr-4 flex flex-row\">Go Back</button>\n        {:else if pageState == 'edit'}\n          <input class=\"appearance-none form-input block w-full rounded-md focus:outline-none sm:text-sm sm:leading-5\" bind:value={editPageName} placeholder=\"Name\" />\n          <br />\n          <div class=\"absolute mb-4 bottom-0\">\n            <button\n              on:click|stopPropagation={() => (pageState = 'link')}\n              type=\"button\"\n              class=\"mr-1 bg-gray-300 inline-flex items-center px-4 py-2 border border-transparent text-sm leading-5 font-medium rounded-md text-white hover:bg-gray-500 focus:outline-none\n              focus:shadow-outline-gray focus:border-gray-700 active:bg-gray-700 transition duration-150 ease-in-out\">\n              Cancel\n            </button>\n            <button\n              type=\"button\"\n              on:click={() => editPage()}\n              class=\"bg-green-300 inline-flex items-center px-4 py-2 border border-transparent text-sm leading-5 font-medium rounded-md text-white hover:bg-green-400 focus:outline-none\n              focus:shadow-outline-green focus:border-green-600 active:bg-green-600 transition duration-150 ease-in-out\">\n              Save\n            </button>\n          </div>\n        {:else if pageState == 'delete'}\n          <span class=\"\">\n            Are you sure you want to delete\n            <p class=\"font-bold whitespace-no-wrap overflow-x-hidden disable-scrollbars\">{pageName}</p>\n            ?\n          </span>\n          <br />\n          <div class=\"absolute mb-4 bottom-0\">\n            <button\n              on:click|stopPropagation={() => (pageState = 'link')}\n              type=\"button\"\n              class=\"mr-1 bg-gray-300 inline-flex items-center px-4 py-2 border border-transparent text-sm leading-5 font-medium rounded-md text-white hover:bg-gray-500 focus:outline-none\n              focus:shadow-outline-gray focus:border-gray-700 active:bg-gray-700 transition duration-150 ease-in-out\">\n              Cancel\n            </button>\n            <button\n              type=\"button\"\n              on:click={() => deletePage()}\n              class=\"bg-red-300 inline-flex items-center px-4 py-2 border border-transparent text-sm leading-5 font-medium rounded-md text-white hover:bg-red-500 focus:outline-none\n              focus:shadow-outline-red focus:border-red-700 active:bg-red-700 transition duration-150 ease-in-out\">\n              Delete\n            </button>\n          </div>\n        {:else}\n          <span class=\"font-semibold text-lg underline\">\n            <p class=\"h-40 whitespace-normal overflow-y-scroll overflow-x-hidden disable-scrollbars\">{pageName}</p>\n          </span>\n          <br />\n          <span\n            class=\"inline-flex items-center px-2.5 mx-auto py-0.5 rounded-md text-sm font-medium leading-5 {pageType === 'Document' ? 'bg-blue-100 text-blue-800' : 'bg-orange-100 text-orange-800'}\">\n            {pageType}\n          </span>\n          <button on:click={() => (pageState = 'menu')} class=\"absolute mb-4 bottom-0 right-0 mr-4 flex flex-row\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" class=\"icon-dots-vertical w-8 h-8\">\n              <path fill-rule=\"evenodd\" d=\"M12 7a2 2 0 1 1 0-4 2 2 0 0 1 0 4zm0 7a2 2 0 1 1 0-4 2 2 0 0 1 0 4zm0 7a2 2 0 1 1 0-4 2 2 0 0 1 0 4z\" />\n            </svg>\n          </button>\n          <br />\n        {/if}\n      </div>\n    </div>\n  </button>\n{/if}\n",
    "<script>\n  export let currentMarks;\n\n  $: isBold = currentMarks && currentMarks.activeMarks && currentMarks.activeMarks.strong\n</script>\n\n<style>\n  .isBold {\n    fill: #31c48d;\n  }</style>\n\n\n<svg\n  version=\"1.1\"\n  id=\"Capa_1\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n  xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n  x=\"0px\"\n  y=\"0px\"\n  viewBox=\"0 0 392.619 392.619\"\n  style=\"enable-background:new 0 0 392.619 392.619;\"\n  xml:space=\"preserve\"\n  class:isBold\n  fill=\"currentColor\">\n  <g>\n    <path\n      d=\"M310.723,0.929H81.896C36.738,0.929,0,37.667,0,82.825v226.969c0,45.158,36.738,81.896,81.896,81.896h228.827\n      c45.158,0,81.896-36.738,81.896-81.896V82.825C392.619,37.667,355.881,0.929,310.723,0.929z M362.619,309.794\n      c0,28.616-23.28,51.896-51.896,51.896H81.896C53.28,361.69,30,338.41,30,309.794V82.825c0-28.615,23.28-51.896,51.896-51.896 h228.827c28.616,0,51.896,23.28,51.896,51.896V309.794z\" />\n    <path\n      d=\"M211.056,105.476h-81.993v35h10.334v111.667h-10.334v35h81.993c29.868,0,54.167-24.299,54.167-54.167\n      c0-14.132-5.445-27.012-14.341-36.667c8.896-9.655,14.341-22.535,14.341-36.667C265.223,129.775,240.924,105.476,211.056,105.476z\n      M211.056,140.476c10.568,0,19.167,8.598,19.167,19.167c0,10.568-8.599,19.167-19.167,19.167h-36.659v-38.333H211.056z\n      M211.056,252.143h-36.659V213.81h36.659c10.568,0,19.167,8.598,19.167,19.167C230.223,243.545,221.624,252.143,211.056,252.143z\" />\n  </g>\n  <g />\n  <g />\n  <g />\n  <g />\n  <g />\n  <g />\n  <g />\n  <g />\n  <g />\n  <g />\n  <g />\n  <g />\n  <g />\n  <g />\n  <g />\n</svg>\n",
    "<script>\n  export let currentMarks;\n\n  $: isItalic = currentMarks && currentMarks.activeMarks && currentMarks.activeMarks.em;\n</script>\n\n<style>\n  .isItalic {\n    fill: #31c48d;\n  }</style>\n\n<svg\n  version=\"1.1\"\n  id=\"Capa_1\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n  xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n  x=\"0px\"\n  y=\"0px\"\n  viewBox=\"0 0 392.619 392.619\"\n  style=\"enable-background:new 0 0 392.619 392.619;\"\n  xml:space=\"preserve\"\n  class:isItalic\n  fill=\"currentColor\">\n  <g>\n    <path\n      d=\"M310.723,0.929H81.896C36.738,0.929,0,37.667,0,82.825v226.97c0,45.158,36.738,81.896,81.896,81.896h228.827\n      c45.158,0,81.896-36.738,81.896-81.896V82.825C392.619,37.667,355.881,0.929,310.723,0.929z M362.619,309.794\n      c0,28.616-23.28,51.896-51.896,51.896H81.896C53.28,361.69,30,338.41,30,309.794V82.825c0-28.616,23.28-51.896,51.896-51.896 h228.827c28.616,0,51.896,23.28,51.896,51.896V309.794z\" />\n    <path\n      d=\"M263.825,96.94h-91.03c-8.284,0-15,6.716-15,15s6.716,15,15,15h26.102l-36.177,138.739h-33.925c-8.284,0-15,6.716-15,15\n      s6.716,15,15,15h45.402c0.041,0,0.082,0.004,0.123,0.004c0.031,0,0.062-0.004,0.093-0.004h45.411c8.284,0,15-6.716,15-15\n      s-6.716-15-15-15h-26.102L229.9,126.94h33.925c8.284,0,15-6.716,15-15S272.109,96.94,263.825,96.94z\" />\n  </g>\n  <g />\n  <g />\n  <g />\n  <g />\n  <g />\n  <g />\n  <g />\n  <g />\n  <g />\n  <g />\n  <g />\n  <g />\n  <g />\n  <g />\n  <g />\n</svg>\n",
    "<script>\n  export let currentMarks;\n\n  $: isUnderlined = currentMarks && currentMarks.activeMarks && currentMarks.activeMarks.underline;\n</script>\n\n<style>\n  .isUnderlined {\n    fill: #31c48d;\n  }</style>\n\n<svg\n  version=\"1.1\"\n  id=\"Capa_1\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n  xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n  x=\"0px\"\n  y=\"0px\"\n  viewBox=\"0 0 392.621 392.621\"\n  style=\"enable-background:new 0 0 392.621 392.621;\"\n  xml:space=\"preserve\"\n  class:isUnderlined\n  fill=\"currentColor\">\n  <g>\n    <path\n      d=\"M310.725,0.93H81.896C36.739,0.93,0,37.668,0,82.825v226.969c0,45.158,36.739,81.896,81.896,81.896h228.829 c45.157,0,81.896-36.738,81.896-81.896V82.825C392.621,37.668,355.882,0.93,310.725,0.93z\n      M362.621,309.795 c0,28.616-23.28,51.896-51.896,51.896H81.896C53.281,361.691,30,338.41,30,309.795V82.825C30,54.21,53.281,30.93,81.896,30.93 h228.829c28.615,0,51.896,23.28,51.896,51.896V309.795z\" />\n    <path\n      d=\"M118.033,185.762c8.786,1.822,14.152,3.333,16.095,4.536c1.943,1.204,3.643,2.822,5.101,4.858\n      c1.457,2.037,2.186,4.327,2.186,6.87c0,4.535-1.666,8.63-4.997,12.284c-3.331,3.655-8.097,5.483-14.297,5.483\n      c-11.752,0-19.663-7.634-23.734-22.902h-5.413v27.135h4.65c2.082-1.943,4.418-3.932,7.009-5.968\n      c5.32,4.164,11.289,6.246,17.905,6.246c9.299,0,16.528-3.235,21.687-9.708c5.158-6.473,7.738-14.171,7.738-23.095\n      c0-7.582-1.956-13.835-5.869-18.76c-3.913-4.923-11.581-8.62-23.005-11.089c-7.447-1.583-12.697-3.232-15.75-4.944\n      c-3.053-1.711-4.58-4.858-4.58-9.438c0-3.701,1.458-6.963,4.372-9.785c2.915-2.822,6.616-4.233,11.104-4.233\n      c5.274,0,9.773,1.631,13.498,4.892c3.724,3.262,7.044,9.011,9.959,17.246h5.552l-1.11-24.983h-4.511\n      c-2.08,1.759-4.02,3.169-5.821,4.233c-5.636-3.979-11.297-5.968-16.979-5.968c-7.485,0-13.735,2.751-18.747,8.251\n      c-5.013,5.501-7.519,12.226-7.519,20.177c0,7.397,2.049,13.568,6.147,18.513C102.803,180.558,109.245,183.941,118.033,185.762z\" />\n    <path\n      d=\"M166.885,206.398c0,4.396,0.382,7.599,1.145,9.612c0.763,2.013,2.613,3.852,5.552,5.517\n      c2.938,1.665,6.489,2.498,10.653,2.498c4.348,0,8.386-1.017,12.11-3.053c3.724-2.035,6.512-4.812,8.363-8.328h0.277v11.381\n      c0.833-0.046,2.117-0.22,3.852-0.52c1.735-0.302,5.517-0.451,11.347-0.451h11.659v-4.095h-7.911v-51.772h-28.176v4.303h9.23v26.094\n      c0,4.581-0.44,8.144-1.318,10.688c-0.88,2.545-2.73,4.813-5.552,6.801c-2.822,1.99-5.367,2.984-7.634,2.984\n      c-2.175,0-3.494-0.902-3.956-2.707c-0.463-1.804-0.694-5.528-0.694-11.173v-36.99h-26.858v4.303h7.912V206.398z\" />\n    <path\n      d=\"M277.369,165.453c-6.292,0-11.081,2.592-14.366,7.773h-0.278v-44.554h-2.012l-5.344,0.624\n      c-4.119,0.463-7.45,0.694-9.994,0.694h-9.091v4.233h7.495v84.598h-7.495v4.233h9.23c5.968,0,11.035,0.278,15.199,0.833h2.012\n      v-7.634h0.278c3.239,5.691,7.912,8.536,14.019,8.536c6.014,0,11.358-2.918,16.031-8.754c4.673-5.836,7.009-13.039,7.009-21.609\n      c0-8.615-2.314-15.598-6.94-20.948C288.496,168.127,283.244,165.453,277.369,165.453z M278.618,202.14\n      c0,7.228-0.417,12.001-1.25,14.317c-0.832,2.316-2.359,3.474-4.58,3.474c-2.545,0-4.858-1.344-6.94-4.031\n      c-2.082-2.687-3.124-6.995-3.124-12.926v-14.247c0-6.254,1.156-11.036,3.47-14.349c2.313-3.313,4.557-4.97,6.732-4.97 c1.897,0,3.319,0.834,4.268,2.501c0.948,1.668,1.423,6.626,1.423,14.872V202.14z\" />\n    <rect x=\"92.559\" y=\"248.95\" width=\"207.503\" height=\"30\" />\n  </g>\n  <g />\n  <g />\n  <g />\n  <g />\n  <g />\n  <g />\n  <g />\n  <g />\n  <g />\n  <g />\n  <g />\n  <g />\n  <g />\n  <g />\n  <g />\n</svg>\n",
    "<script>\n  import Continue from \"./GPT3Options/Continue.svelte\";\n  import Template from \"./GPT3Options/Template.svelte\";\n  import Freewrite from \"./GPT3Options/Freewrite.svelte\";\n  import StructuredWrite from \"./GPT3Options/StructuredWrite.svelte\";\n  import Respond from \"./GPT3Options/Respond.svelte\";\n  import Explain from \"./GPT3Options/Explain.svelte\";\n  import KnowledgeBase from \"./GPT3Options/KnowledgeBase.svelte\";\n  import ListTable from \"./GPT3Options/ListTable.svelte\";\n  import Rewrite from \"./GPT3Options/Rewrite.svelte\";\n  import BetaOpen from \"./GPT3Options/BetaOpen.svelte\";\n\n  import { SSE } from \"sse.js\";\n  import clickOutside from \"../../../../js/clickOutside.js\";\n\n  let clippyMenu = false;\n  const toggleClippyMenu = () => (clippyMenu = !clippyMenu);\n  export let documentMenu;\n\n  function myElasticOut(t) {\n    return Math.sin((-5.0 * (t + 1.0) * Math.PI) / 2) * Math.pow(2.0, -10.0 * t) + 1.0;\n  }\n\n  function whoosh(node, params) {\n    const existingTransform = getComputedStyle(node).transform.replace(\"none\", \"\");\n\n    return {\n      delay: params.delay || 0,\n      duration: params.duration || 500,\n      easing: params.easing || myElasticOut,\n      css: (t, u) => `transform: ${existingTransform} scale(${t})`,\n    };\n  }\n\n  let clippySettings = false;\n  let gpt3Response = \"\";\n  let loading = false;\n  let max_tokens = 200;\n  let temperature = 70;\n  let currentGpt3Option;\n  let gpt3option = { id: 9, text: `Continue Writing.`, description: `Continue writing a piece of text for you.`, component: Continue };\n  $: gpt3option, (gpt3Response = \"\");\n  let gpt3options = [\n    { id: 9, text: `Continue Writing.`, description: `Continue writing a piece of text for you.`, component: Continue },\n    { id: 10, text: `Template.`, description: `Template out something you want to write.`, component: Template },\n    { id: 1, text: `Easy Write.`, description: `Write new content for you.`, component: Freewrite },\n    { id: 8, text: `Complex Write.`, description: `Write new content for you (more complex).`, component: StructuredWrite },\n    { id: 2, text: `Respond to Question.`, description: `Respond to a proposal or other document question.`, component: Respond },\n    { id: 3, text: `Explain/Summarize.`, description: `Have a piece of text explained.`, component: Explain },\n    { id: 4, text: `Knowledge Base.`, description: `Get questions answered about anyting.`, component: KnowledgeBase },\n    { id: 5, text: `List or Table generation.`, description: `Generated a list or table on a subject.`, component: ListTable },\n    { id: 6, text: `Rewrite.`, description: `Rewrite text in simple or complex terms.`, component: Rewrite },\n    { id: 7, text: `*Beta. Open Prompt.`, description: `For advanced and beta use only.`, component: BetaOpen },\n  ];\n  let gpt3optionsSelect = false;\n\n  let source;\n\n  const gpt3 = async () => {\n    loading = true;\n    gpt3Response = \"\";\n    let prompt = currentGpt3Option.getPrompt();\n    prompt[\"stream\"] = true;\n    source = new SSE(\"https://api.openai.com/v1/engines/davinci/completions\", {\n      headers: { \"Content-Type\": \"application/json\", Authorization: \"Bearer sk-MmPRPx7kxQrIf91zScGh3B4f8pHeJUsXBizWqGIS\" },\n      payload: JSON.stringify(prompt),\n      method: \"POST\",\n    });\n    source.addEventListener(\"message\", function (e) {\n      if (e.data == \"[DONE]\") {\n        loading = false;\n      } else {\n        let json = JSON.parse(e.data);\n        let text = json.choices[0].text;\n        gpt3Response = gpt3Response + text;\n      }\n    });\n    source.stream();\n  };\n\n  const cancelStream = () => {\n    source.close();\n    loading = false;\n  };\n</script>\n\n<style>\n  .mrclip {\n    /*-webkit-filter: drop-shadow( 5px 5px 200px #9f9f9f) drop-shadow(-5px -5px 200px #a3a3a3);\n    filter: drop-shadow( 5px 5px 200px #9f9f9f) drop-shadow(-5px -5px 200px #a3a3a3);*/\n    position: relative;\n  }\n\n  .document-menu {\n    background: rgba(161, 161, 161, 0.97);\n    background: linear-gradient(180deg, rgba(113, 113, 113, 0.97) 0%, rgba(161, 161, 161, 0.97) 63%, rgba(175, 177, 173, 0.97) 100%);\n  }\n\n  .clippySettings:hover {\n    fill: rgba(18, 199, 156, 1);\n    cursor: pointer;\n  }\n\n  ::-webkit-scrollbar {\n    -webkit-appearance: none;\n    width: 7px;\n  }\n\n  ::-webkit-scrollbar-thumb {\n    border-radius: 4px;\n    background-color: rgba(0, 0, 0, 0.5);\n    -webkit-box-shadow: 0 0 1px rgba(255, 255, 255, 0.5);\n  }</style>\n\n<button\n  id=\"clipButton\"\n  style=\"margin-top:-3rem;top:-2rem;\"\n  on:click={toggleClippyMenu}\n  class=\"{documentMenu ? '' : 'z-50'} focus:outline-none cursor-pointer -ml-6 h-20 w-20 sticky top-0 transition duration-500 ease-in-out transform hover:-translate-y-1 hover:scale-110\">\n  <svg\n    id=\"clipButtonIcon\"\n    class=\"mrclip sticky\"\n    width=\"100%\"\n    height=\"100%\"\n    viewBox=\"0 0 512 512\"\n    version=\"1.1\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n    xml:space=\"preserve\"\n    xmlns:serif=\"http://www.serif.com/\"\n    style=\"fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2;\">\n    <defs>\n      <linearGradient id=\"grad1\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\">\n        <stop offset=\"0%\" style=\"stop-color:rgb(172, 172, 172);stop-opacity:1\" />\n        <stop offset=\"100%\" style=\"stop-color:rgb(145, 145, 145);stop-opacity:1\" />\n      </linearGradient>\n    </defs>\n    <path\n      id=\"clipButtonIconP\"\n      d=\"M256,0C201.987,0 158.045,43.943 158.045,97.955L158.045,436.936C158.045,478.326 191.719,512 233.109,512C274.499,512 308.173,478.326 308.173,436.936L308.173,122.511C308.173,94.184\n      285.127,71.136 256.798,71.136C228.471,71.136 205.424,94.183 205.424,122.511L205.424,419.422L236.771,419.422L236.771,122.511C236.771,111.469 245.755,102.483 256.799,102.483C267.843,102.483\n      276.827,111.468 276.827,122.511L276.827,436.935C276.827,461.041 257.215,480.652 233.109,480.652C209.003,480.652 189.392,461.04 189.392,436.935L189.392,97.955C189.392,61.228 219.272,31.347\n      256,31.347C292.728,31.347 322.608,61.228 322.608,97.955L353.955,97.955C353.955,43.943 310.013,0 256,0Z\"\n      style=\"fill-rule:nonzero;\"\n      fill=\"url(#grad1)\" />\n  </svg>\n</button>\n\n<div use:clickOutside={{ callback: () => clippyMenu = false, exclusions: [\"clipButton\", \"clipButtonIcon\", \"clipButtonIconP\", \"clippySettings\", \"clippySettingsIcon\", \"clippySettingsIconP\", \"clippySettingsIconP2\", \"tryAgain\", \"cancel\", \"generating\", \"goBack\", \"generate\"]}} class=\"z-40 sticky\" style=\"top: 2rem;\">\n  <div class=\"{clippyMenu && !documentMenu ? 'transform opacity-100 scale-100' : 'hidden transform opacity-0 scale-95'} transition ease-out duration-200 document-menu mt-8 -mx-1 origin-top absolute right-0 left-0 rounded-md shadow-lg\" in:whoosh>\n    <div class=\"rounded-lg shadow-xs document-menu px-4 py-4\" role=\"menu\" aria-orientation=\"vertical\" aria-labelledby=\"options-menu\">\n      {#if clippySettings}\n        <div class=\"flex flex-col\">\n          <span class=\"text-lg text-white mb-1\">Creativity: {temperature}</span>\n          <span class=\"text-sm text-white mb-2\">Defines how creative the output is.</span>\n          <input type=\"range\" bind:value={temperature} min=\"0\" max=\"100\" />\n        </div>\n        <div class=\"flex flex-col mt-4\">\n          <span class=\"text-lg text-white mb-1\">Generated Length: {max_tokens}</span>\n          <span class=\"text-sm text-white mb-2\">Defines how long the generated output is.</span>\n          <input type=\"range\" bind:value={max_tokens} min=\"1\" max=\"512\" />\n        </div>\n        <div class=\"flex flex-row mt-4\">\n          <button\n            id=\"goBack\"\n            class=\"rounded-md my-auto text-gray-900 bg-white bg-opacity-75 py-2 px-4 ml-auto mr-2\"\n            on:click={() => {\n              clippySettings = false;\n            }}>\n            Go Back\n          </button>\n          <!--<button class=\"rounded-md my-auto primary-gradient bg-opacity-75 py-2 px-4 mr-2\" on:click={addToDoc}>Add to Doc</button>-->\n        </div>\n      {:else}\n        <div class=\"flex flex-col py-1\">\n          <div class=\"flex flex-row mx-2\">\n            <div class=\"relative w-full\">\n              <span class=\"inline-block w-full rounded-md shadow-sm\">\n                <button\n                  on:click={() => {\n                    gpt3optionsSelect == true ? (gpt3optionsSelect = false) : (gpt3optionsSelect = true);\n                  }}\n                  type=\"button\"\n                  aria-haspopup=\"listbox\"\n                  aria-expanded=\"true\"\n                  aria-labelledby=\"listbox-label\"\n                  class=\"text-black cursor-default relative w-full rounded-md border border-gray-300 bg-white pl-3 pr-10 py-2 text-left focus:outline-none focus:shadow-outline-blue\n                  focus:border-blue-300 transition ease-in-out duration-150 sm:text-sm sm:leading-5\">\n                  <span class=\"block truncate\">{gpt3option.text}</span>\n                  <span class=\"block truncate text-xs\">{gpt3option.description}</span>\n                  <span class=\"absolute inset-y-0 right-0 flex items-center pr-2 pointer-events-none\">\n                    <svg class=\"h-5 w-5 text-gray-400\" viewBox=\"0 0 20 20\" fill=\"none\" stroke=\"currentColor\">\n                      <path d=\"M7 7l3-3 3 3m0 6l-3 3-3-3\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n                    </svg>\n                  </span>\n                </button>\n              </span>\n\n              <!-- Select popover, show/hide based on select state. -->\n              <div class=\"{gpt3optionsSelect ? '' : 'hidden'} absolute w-full rounded-md bg-white shadow-lg mt-1 z-50\">\n                <ul\n                  tabindex=\"-1\"\n                  role=\"listbox\"\n                  aria-labelledby=\"listbox-label\"\n                  aria-activedescendant=\"listbox-item-3\"\n                  class=\"max-h-60 rounded-md py-1 text-base leading-6 shadow-xs overflow-auto overflow-y-visible focus:outline-none sm:text-sm sm:leading-5\">\n                  {#each gpt3options as option}\n                    <li\n                      on:click={() => {\n                        (gpt3option = option), (gpt3optionsSelect = false);\n                      }}\n                      id=\"listbox-item-0\"\n                      role=\"option\"\n                      class=\" cursor-default select-none relative py-2 pl-8 pr-4 text-gray-900 hover:text-white hover:bg-green-400\">\n                      <span class=\" block truncate {option.id == gpt3option.id ? 'font-bold' : 'font-normal'}\">{option.text}</span>\n                      <span class=\"block truncate text-xs\">{option.description}</span>\n                      {#if option.id == gpt3option.id}\n                        <span class=\"absolute inset-y-0 left-0 flex items-center pl-1.5\">\n                          <svg class=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                            <path fill-rule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clip-rule=\"evenodd\" />\n                          </svg>\n                        </span>\n                      {/if}\n                    </li>\n                  {/each}\n                </ul>\n              </div>\n            </div>\n            <button id=\"clippySettings\" on:click={() => (clippySettings = true)} class=\"focus:outline-none\">\n              <svg id=\"clippySettingsIcon\" class=\"ml-4 w-8 h-8 clippySettings text-black\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"white\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path\n                  id=\"clippySettingsIconP\"\n                  stroke-linecap=\"round\"\n                  stroke-linejoin=\"round\"\n                  stroke-width=\"2\"\n                  d=\"M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0\n                  00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0\n                  00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z\" />\n                <path id=\"clippySettingsIconP2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\" />\n              </svg>\n            </button>\n          </div>\n\n          <div class=\"flex rounded-full mt-2\">\n            <svelte:component this={gpt3option.component} bind:this={currentGpt3Option} {max_tokens} {temperature} />\n          </div>\n\n          {#if gpt3Response.length > 0 || loading}\n            <div class=\"flex rounded-full\">\n              <textarea\n                class=\"rounded-md w-full mx-2 my-2 py-2 px-3 text-gray-700 placeholder-gray-700 focus:outline-none h-56\"\n                id=\"username\"\n                type=\"text\"\n                style=\"background-color:rgb(250, 250, 250);\"\n                placeholder=\"Text is generating...\"\n                bind:value={gpt3Response} />\n            </div>\n            <div class=\"flex flex-row\">\n              {#if !loading}\n                <button id=\"tryAgain\" class=\"rounded-md my-auto text-gray-900 bg-white bg-opacity-75 py-2 px-4 ml-auto mr-2 hover:bg-green-400 hover:text-white\" on:click={gpt3}>Try Again</button>\n              {:else}\n                <button id=\"cancel\" class=\"rounded-md my-auto text-gray-900 bg-white bg-opacity-75 py-2 px-4 ml-auto mr-2\" on:click={cancelStream}>Cancel</button>\n                <button id=\"generating\" class=\"rounded-md my-auto ml-2 primary-gradient text-white bg-opacity-75 py-2 px-4 inline-flex items-center\" disabled>\n                  <svg class=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                    <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\" />\n                    <path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\" />\n                  </svg>\n                  Generating!\n                </button>\n              {/if}\n              <!--<button class=\"rounded-md my-auto primary-gradient bg-opacity-75 py-2 px-4 mr-2\" on:click={addToDoc}>Add to Doc</button>-->\n            </div>\n          {:else}\n            <div class=\"flex flex-row\">\n              <button id=\"generate\" class=\"rounded-md my-auto text-gray-900 bg-white bg-opacity-75 py-2 px-4 ml-auto mr-2 hover:bg-green-400 hover:text-white\" on:click={gpt3}>Generate</button>\n            </div>\n          {/if}\n        </div>\n      {/if}\n    </div>\n  </div>\n</div>\n",
    "<script>\n\n</script>\n\n<style>\n  .binder-inside {\n    grid-area: 1 / 1 / 1 / 1;\n    margin-top: 20px;\n    margin-bottom: 20px;\n  }\n\n  /*.bookmark:hover {\n    transform: translate(0.5rem, 0);\n    -webkit-transform: translate(0.5rem, 0);\n    -moz-transform: translate(0.5rem, 0);\n    -o-transform: translate(0.5rem, 0);\n    -ms-transform: translate(0.5rem, 0);\n  }*/</style>\n\n<div class=\"binder-inside h-56 z-10 pl-20 flex flex-col space-y-4 transition transform duration-500 ease-in-out\">\n  <div class=\"bookmark yellow-bookmark w-full h-8\" />\n  <div class=\"bookmark red-bookmark w-full h-8\" />\n  <div class=\"bookmark pink-bookmark w-full h-8\" />\n</div>\n",
    "<script>\n    import { metatags } from \"@sveltech/routify\";\n    metatags.title = \"Parch\";\n    metatags.description = \"Writing built to give you superpowers\";\n    \n    import { goto, params } from \"@sveltech/routify\";\n    $goto(\"/?&ref_id=\" + $params.ref_id)\n  </script>\n  \n  <style>\n    .huge {\n      font-size: 12rem;\n    }\n    .e404 {\n      position: absolute;\n      left: 50%;\n      top: 50%;\n      transform: translate(-50%, -50%);\n      text-align: center;\n    }</style>\n  \n  <div class=\"e404\">\n    <div class=\"huge\">Parch</div>\n    <div class=\"big\">\n      Welcome to Parch.\n      <!-- link to the parent folder of _fallback.svelte -->\n    </div>\n  </div>\n  "
  ],
  "names": [],
  "mappings": "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"
}